"""Diffgram initial DB

Revision ID: 77907aedd319
Revises: 
Create Date: 2020-07-22 12:12:11.057990

"""
from alembic import op
import sqlalchemy as sa
import shared
from sqlalchemy import BIGINT
import datetime

# revision identifiers, used by Alembic.
revision = '77907aedd319'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###

    video = op.create_table('video',
                            sa.Column('id', sa.Integer(), nullable=False),
                            sa.Column('keyframe_list', shared.database.core.JSONEncodedDict(), nullable=True),
                            sa.Column('label_id_map_to_instance_group_id', shared.database.core.JSONEncodedDict(),
                                      nullable=True),
                            sa.Column('root_blob_path_to_frames', sa.String(), nullable=True),
                            sa.Column('url_signed_expiry', sa.Integer(), nullable=True),
                            sa.Column('file_signed_url', sa.String(), nullable=True),
                            sa.Column('file_blob_path', sa.String(), nullable=True),
                            sa.Column('preview_image_url_thumb', sa.String(), nullable=True),
                            sa.Column('preview_image_id', sa.Integer(), nullable=True),
                            sa.Column('width', sa.Integer(), nullable=True),
                            sa.Column('height', sa.Integer(), nullable=True),
                            sa.Column('soft_delete', sa.Boolean(), nullable=True),
                            sa.Column('filename', sa.String(), nullable=True),
                            sa.Column('frame_count', sa.Integer(), nullable=True),
                            sa.Column('description', sa.String(), nullable=True),
                            sa.Column('created_time', sa.DateTime(), nullable=True),
                            sa.Column('last_updated_time', sa.DateTime(), nullable=True),
                            sa.Column('status', sa.String(), nullable=True),
                            sa.Column('frame_rate', sa.Integer(), nullable=True),
                            sa.Column('original_fps', sa.Integer(), nullable=True),
                            sa.Column('fps_conversion_ratio', sa.Float(), nullable=True),
                            sa.Column('offset_in_seconds', sa.Integer(), nullable=True),
                            sa.Column('parent_video_split_duration', sa.Integer(), nullable=True),
                            sa.PrimaryKeyConstraint('id')
                            )
    op.create_table('label',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('name', sa.String(length=200), nullable=True),
                    sa.Column('colour', shared.database.core.JSONEncodedDict(), nullable=True),
                    sa.Column('soft_delete', sa.Boolean(), nullable=True),
                    sa.PrimaryKeyConstraint('id')
                    )

    input = op.create_table('input',
                            sa.Column('id', sa.Integer(), nullable=False),
                            sa.Column('created_time', sa.DateTime(), nullable=True),
                            sa.Column('time_completed', sa.DateTime(), nullable=True),
                            sa.Column('time_loaded_video', sa.DateTime(), nullable=True),
                            sa.Column('time_video_write_finished', sa.DateTime(), nullable=True),
                            sa.Column('time_pushed_all_frames_to_queue', sa.DateTime(), nullable=True),
                            sa.Column('time_updated', sa.DateTime(), nullable=True),
                            sa.Column('time_last_attempted', sa.Integer(), nullable=True),
                            sa.Column('mode', sa.String(), nullable=True),
                            sa.Column('url', sa.String(), nullable=True),
                            sa.Column('media_type', sa.String(), nullable=True),
                            sa.Column('type', sa.String(), nullable=True),
                            sa.Column('allow_csv', sa.Boolean(), nullable=True),
                            sa.Column('processing_deferred', sa.Boolean(), nullable=True),
                            sa.Column('status', sa.String(), nullable=True),
                            sa.Column('status_text', sa.String(), nullable=True),
                            sa.Column('offset_in_seconds', sa.Integer(), nullable=True),
                            sa.Column('percent_complete', sa.Float(), nullable=True),
                            sa.Column('description', sa.String(), nullable=True),
                            sa.Column('size', sa.Integer(), nullable=True),
                            sa.Column('archived', sa.Boolean(), nullable=True),
                            sa.Column('raw_data_blob_path', sa.String(), nullable=True),
                            sa.Column('update_log', sa.String(), nullable=True),
                            sa.Column('resumable_url', sa.String(), nullable=True),
                            sa.Column('video_split_duration', sa.Integer(), nullable=True),
                            sa.Column('video_was_split', sa.Boolean(), nullable=True),
                            sa.Column('retry_log', shared.database.core.JSONEncodedDict(), nullable=True),
                            sa.Column('retry_count', sa.Integer(), nullable=True),
                            sa.Column('parent_input_id', sa.Integer(), nullable=True),
                            sa.Column('parent_file_id', sa.Integer(), nullable=True),
                            sa.Column('file_id', sa.Integer(), nullable=True),
                            sa.Column('job_id', sa.Integer(), nullable=True),
                            sa.Column('directory_id', sa.Integer(), nullable=True),
                            sa.Column('invalid_directory_permission', sa.Boolean(), nullable=True),
                            sa.Column('project_id', sa.Integer(), nullable=True, index=True),  # Added Index
                            sa.Column('user_id', sa.Integer(), nullable=True),
                            sa.Column('temp_dir', sa.String(), nullable=True),
                            sa.Column('temp_dir_path_and_filename', sa.String(), nullable=True),
                            sa.Column('dzuuid', sa.String(), nullable=True),
                            sa.Column('original_filename', sa.String(), nullable=True),
                            sa.Column('extension', sa.String(), nullable=True),
                            sa.Column('instance_list', shared.database.core.JSONEncodedDict(), nullable=True),
                            sa.Column('frame_packet_map', shared.database.core.JSONEncodedDict(), nullable=True),
                            sa.Column('video_parent_length', sa.Integer(), nullable=True),
                            sa.PrimaryKeyConstraint('id')
                            )

    op.create_table('signup_code',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('type', sa.String(), nullable=True),
                    sa.Column('created_time_int', sa.Integer(), nullable=True),
                    sa.Column('created_time', sa.DateTime(), nullable=True),
                    sa.Column('redeemed_time', sa.DateTime(), nullable=True),
                    sa.Column('code', sa.String(length=100), nullable=True),
                    sa.Column('is_available', sa.Boolean(), nullable=True),
                    sa.Column('email_sent_to', sa.String(length=100), nullable=True),
                    sa.Column('project_string_id', sa.String(length=100), nullable=True),
                    sa.Column('permission_level', sa.String(), nullable=True),
                    sa.PrimaryKeyConstraint('id')
                    )

    task = op.create_table('task',
                           sa.Column('id', sa.BIGINT(), nullable=False),
                           sa.Column('is_live', sa.Boolean(), nullable=True),
                           sa.Column('is_root', sa.Boolean(), nullable=True),
                           sa.Column('root_id', sa.Integer(), nullable=True),
                           sa.Column('parent_id', sa.Integer(), nullable=True),
                           sa.Column('child_primary_id', sa.Integer(), nullable=True),
                           sa.Column('job_id', sa.Integer(), nullable=True),
                           sa.Column('kind', sa.String(), nullable=True),
                           sa.Column('task_type', sa.String(), nullable=True),
                           sa.Column('job_type', sa.String(), nullable=True),
                           sa.Column('status', sa.String(), nullable=True, index=True),
                           sa.Column('file_original_id', sa.BIGINT(), nullable=True),
                           sa.Column('file_id', sa.BIGINT(), nullable=True),
                           sa.Column('completion_directory_id', sa.Integer(), nullable=True),
                           sa.Column('completion_action', sa.String(), nullable=True),
                           sa.Column('guide_id', sa.Integer(), nullable=True),
                           sa.Column('project_id', sa.Integer(), nullable=True, index=True),
                           sa.Column('label_mode', sa.String(), nullable=True),
                           sa.Column('label_dict', shared.database.core.JSONEncodedDict(), nullable=True),
                           sa.Column('gold_standard_file', shared.database.core.JSONEncodedDict(), nullable=True),
                           sa.Column('assignee_user_id', sa.Integer(), nullable=True),
                           sa.Column('previous_assignees', sa.ARRAY(sa.Integer()), nullable=True),
                           sa.Column('time_created', sa.DateTime(), nullable=True),
                           sa.Column('time_completed', sa.DateTime(), nullable=True),
                           sa.Column('time_updated', sa.DateTime(), nullable=True),
                           sa.Column('count_instances_changed', sa.Integer(), nullable=True),
                           sa.Column('no_boxes_in_image', sa.Boolean(), nullable=True),
                           sa.Column('reviewed_no_changes', sa.Boolean(), nullable=True),
                           sa.Column('review_star_rating_average', sa.Float(), nullable=True),
                           sa.Column('gold_standard_missing', sa.Integer(), nullable=True),
                           sa.PrimaryKeyConstraint('id')
                           )

    working_dir = op.create_table('working_dir',
                                  sa.Column('id', sa.Integer(), nullable=False),
                                  sa.Column('created_time', sa.DateTime(), nullable=True),
                                  sa.Column('archived', sa.Boolean(), nullable=True),
                                  sa.Column('has_changes', sa.Boolean(), nullable=True),
                                  sa.Column('nickname', sa.String(), nullable=True),
                                  sa.Column('count_changes', sa.Integer(), nullable=True),
                                  sa.Column('user_id', sa.Integer(), nullable=True),
                                  sa.Column('file_limit_time', sa.Integer(), nullable=True),
                                  sa.Column('branch_id', sa.Integer(), nullable=True),
                                  sa.Column('project_id', sa.Integer(), nullable=True),
                                  sa.Column('label_file_colour_map', shared.database.core.JSONEncodedDict(),
                                            nullable=True),
                                  sa.Column('jobs_to_sync', shared.database.core.JSONEncodedDict(), nullable=True),
                                  sa.PrimaryKeyConstraint('id')
                                  )

    deletion = op.create_table('deletion',
                               sa.Column('id', sa.Integer(), nullable=False),
                               sa.Column('notes', sa.String(), nullable=True),
                               sa.Column('mode', sa.String(), nullable=True),
                               sa.Column('cache', shared.database.core.JSONEncodedDict(), nullable=True),
                               sa.Column('project_id', sa.Integer(), nullable=True),
                               sa.Column('member_created_id', sa.Integer(), nullable=True),
                               sa.Column('member_updated_id', sa.Integer(), nullable=True),
                               sa.Column('time_created', sa.DateTime(), nullable=True),
                               sa.Column('time_updated', sa.DateTime(), nullable=True),
                               sa.PrimaryKeyConstraint('id')
                               )
    report_dashboard = op.create_table('report_dashboard',
                                       sa.Column('id', sa.Integer(), nullable=False),
                                       sa.Column('diffgram_wide_default', sa.Boolean(), nullable=True),
                                       sa.Column('project_id', sa.Integer(), nullable=True),
                                       sa.Column('name', sa.String(), nullable=True),
                                       sa.Column('archived', sa.Boolean(), nullable=True),
                                       sa.Column('member_created_id', sa.Integer(), nullable=True),
                                       sa.Column('member_updated_id', sa.Integer(), nullable=True),
                                       sa.Column('time_created', sa.DateTime(), nullable=True),
                                       sa.Column('time_updated', sa.DateTime(), nullable=True),
                                       sa.PrimaryKeyConstraint('id')
                                       )

    job = op.create_table('job',
                          sa.Column('id', sa.Integer(), nullable=False),
                          sa.Column('hidden', sa.Boolean(), nullable=True),
                          sa.Column('is_live', sa.Boolean(), nullable=True),
                          sa.Column('td_api_trainer_basic_training', sa.Boolean(), nullable=True),
                          sa.Column('quality_score_last', sa.Float(), nullable=True),
                          sa.Column('attached_directories_dict', shared.database.core.JSONEncodedDict(), nullable=True),
                          sa.Column('auction_rank_last', sa.Integer(), nullable=True),
                          sa.Column('auction_cost_per_instance_last', sa.Integer(), nullable=True),
                          sa.Column('security_require_email_verified', sa.Boolean(), nullable=True),
                          sa.Column('status', sa.String(), nullable=True),
                          sa.Column('type', sa.String(), nullable=True),
                          sa.Column('is_template', sa.Boolean(), nullable=True),
                          sa.Column('instance_type', sa.String(), nullable=True),
                          sa.Column('share_type', sa.String(), nullable=True),
                          sa.Column('permission', sa.String(), nullable=True),
                          sa.Column('project_id', sa.Integer(), nullable=True),
                          sa.Column('category', sa.String(), nullable=True),
                          sa.Column('guide_default_id', sa.Integer(), nullable=True),
                          sa.Column('guide_review_id', sa.Integer(), nullable=True),
                          sa.Column('directory_id', sa.Integer(), nullable=True),
                          sa.Column('completion_directory_id', sa.Integer(), nullable=True),
                          sa.Column('completion_action', sa.String(), nullable=True),
                          sa.Column('review_by_human_freqeuncy', sa.String(), nullable=True),
                          sa.Column('label_mode', sa.String(), nullable=True),
                          sa.Column('passes_per_file', sa.Integer(), nullable=True),
                          sa.Column('file_count', sa.Integer(), nullable=True),
                          sa.Column('launch_datetime_deferred', sa.DateTime(), nullable=True),
                          sa.Column('launch_datetime', sa.DateTime(), nullable=True),
                          sa.Column('launch_attempt_log', shared.database.core.JSONEncodedDict(), nullable=True),
                          sa.Column('waiting_to_be_launched', sa.Boolean(), nullable=True),
                          sa.Column('label_dict', shared.database.core.JSONEncodedDict(), nullable=True),
                          sa.Column('name', sa.String(), nullable=True),
                          sa.Column('description', sa.String(), nullable=True),
                          sa.Column('member_created_id', sa.Integer(), nullable=True),
                          sa.Column('member_updated_id', sa.Integer(), nullable=True),
                          sa.Column('time_created', sa.DateTime(), nullable=True),
                          sa.Column('time_updated', sa.DateTime(), nullable=True),
                          sa.Column('time_completed', sa.DateTime(), nullable=True),
                          sa.Column('stat_last_updated_time', sa.Integer(), nullable=True),
                          sa.Column('file_count_statistic', sa.Integer(), nullable=True),
                          sa.Column('stat_count_tasks', sa.Integer(), nullable=True),
                          sa.Column('stat_count_complete', sa.Integer(), nullable=True),
                          sa.Column('stat_count_labels', sa.Integer(), nullable=True),
                          sa.Column('is_root', sa.Boolean(), nullable=True),
                          sa.Column('root_id', sa.Integer(), nullable=True),
                          sa.Column('parent_id', sa.Integer(), nullable=True),
                          sa.Column('repeatable', sa.Boolean(), nullable=True),
                          sa.Column('file_handling', sa.String(), nullable=True),
                          sa.PrimaryKeyConstraint('id')
                          )
    attribute_template_group = op.create_table('attribute_template_group',
                                               sa.Column('id', sa.BIGINT(), nullable=False),
                                               sa.Column('archived', sa.Boolean(), nullable=True),
                                               sa.Column('name', sa.String(), nullable=True),
                                               sa.Column('prompt', sa.String(), nullable=True),
                                               sa.Column('show_prompt', sa.Boolean(), nullable=True),
                                               sa.Column('is_root', sa.Boolean(), nullable=True),
                                               sa.Column('is_new', sa.Boolean(), nullable=True),
                                               sa.Column('parent_id', sa.Integer(), nullable=True),
                                               sa.Column('root_id', sa.Integer(), nullable=True),
                                               sa.Column('kind', sa.String(), nullable=True),
                                               sa.Column('project_id', sa.Integer(), nullable=True),
                                               sa.Column('member_created_id', sa.Integer(), nullable=True),
                                               sa.Column('member_updated_id', sa.Integer(), nullable=True),
                                               sa.Column('time_created', sa.DateTime(), nullable=True),
                                               sa.Column('time_updated', sa.DateTime(), nullable=True),
                                               sa.PrimaryKeyConstraint('id')
                                               )

    image = op.create_table('image',
                            sa.Column('id', sa.BIGINT(), nullable=False),
                            sa.Column('original_filename', sa.String(length=250), nullable=True),
                            sa.Column('description', sa.String(length=250), nullable=True),
                            sa.Column('width', sa.Integer(), nullable=True),
                            sa.Column('height', sa.Integer(), nullable=True),
                            sa.Column('soft_delete', sa.Boolean(), nullable=True),
                            sa.Column('mask_joint_url', sa.String(), nullable=True),
                            sa.Column('mask_joint_blob_name', sa.String(), nullable=True),
                            sa.Column('is_inference', sa.Boolean(), nullable=True),
                            sa.Column('annotation_status', sa.String(), nullable=True),
                            sa.Column('is_annotation_example', sa.Boolean(), nullable=True),
                            sa.Column('url_annotation_example', sa.String(), nullable=True),
                            sa.Column('url_annotation_example_thumb', sa.String(), nullable=True),
                            sa.Column('url_public', sa.String(), nullable=True),
                            sa.Column('url_public_thumb', sa.String(), nullable=True),
                            sa.Column('url_signed', sa.String(), nullable=True),
                            sa.Column('url_signed_blob_path', sa.String(), nullable=True),
                            sa.Column('url_signed_thumb', sa.String(), nullable=True),
                            sa.Column('url_signed_thumb_blob_path', sa.String(), nullable=True),
                            sa.Column('url_signed_expiry', sa.Integer(), nullable=True),
                            sa.Column('url_signed_expiry_force_refresh', sa.Integer(), nullable=True),
                            sa.Column('time_created', sa.DateTime(), nullable=True),
                            sa.Column('time_updated', sa.DateTime(), nullable=True),
                            sa.PrimaryKeyConstraint('id')
                            )

    file = op.create_table('file',
                           sa.Column('id', sa.BIGINT(), nullable=False),
                           sa.Column('created_time', sa.DateTime(), nullable=True),
                           sa.Column('time_last_updated', sa.DateTime(), nullable=True),
                           sa.Column('count_instances_changed', sa.Integer(), nullable=True),
                           sa.Column('created_by_kind', sa.String(), nullable=True),
                           sa.Column('time_committed', sa.DateTime(), nullable=True),
                           sa.Column('job_id', sa.Integer(), nullable=True),
                           sa.Column('input_id', sa.Integer(), nullable=True),
                           sa.Column('member_created_id', sa.Integer(), nullable=True),
                           sa.Column('member_updated_id', sa.Integer(), nullable=True),
                           sa.Column('state', sa.String(), nullable=True),
                           sa.Column('committed', sa.Boolean(), nullable=True),
                           sa.Column('type', sa.String(), nullable=True),
                           sa.Column('hash', sa.String(), nullable=True),
                           sa.Column('ann_is_complete', sa.Boolean(), nullable=True),
                           sa.Column('has_some_machine_made_instances', sa.Boolean(), nullable=True),
                           sa.Column('instance_type_count', shared.database.core.JSONEncodedDict(), nullable=True),
                           sa.Column('boxes_count', sa.Integer(), nullable=True),
                           sa.Column('boxes_machine_made_count', sa.Integer(), nullable=True),
                           sa.Column('polygon_count', sa.Integer(), nullable=True),
                           sa.Column('image_id', sa.Integer(), nullable=True),
                           sa.Column('original_filename', sa.String(), nullable=True),
                           sa.Column('video_id', sa.Integer(), nullable=True),
                           sa.Column('video_parent_file_id', sa.BIGINT(), nullable=True),
                           sa.Column('is_child_of_video', sa.Boolean(), nullable=True),
                           sa.Column('label_id', sa.Integer(), nullable=True),
                           sa.Column('project_id', sa.Integer(), nullable=True),
                           sa.Column('frame_number', sa.Integer(), nullable=True),
                           sa.Column('global_frame_number', sa.Integer(), nullable=True),
                           sa.Column('is_root', sa.Boolean(), nullable=True),
                           sa.Column('root_id', sa.BIGINT(), nullable=True),
                           sa.Column('parent_id', sa.BIGINT(), nullable=True),
                           sa.Column('child_primary_id', sa.BIGINT(), nullable=True),
                           sa.Column('colour', shared.database.core.JSONEncodedDict(), nullable=True),
                           sa.Column('mask_joint_blob_name', sa.String(), nullable=True),
                           sa.Column('cache_dict', shared.database.core.JSONEncodedDict(), nullable=True),
                           sa.PrimaryKeyConstraint('id')
                           )

    project = op.create_table('project',
                              sa.Column('id', sa.Integer(), nullable=False),
                              sa.Column('name', sa.String(length=250), nullable=True),
                              sa.Column('is_public', sa.Boolean(), nullable=True),
                              sa.Column('goal', sa.String(), nullable=True),
                              sa.Column('deletion_pending', sa.Boolean(), nullable=True),
                              sa.Column('deletion_id', sa.Integer(), nullable=True),
                              sa.Column('highest_ai_version_number', sa.Integer(), nullable=True),
                              sa.Column('star_count', sa.Integer(), nullable=True),
                              sa.Column('latest_issue_number', sa.Integer(), nullable=True),
                              sa.Column('credit_balance', sa.Float(), nullable=True),
                              sa.Column('project_string_id', sa.String(length=100), nullable=True, index=True),
                              # Add index
                              sa.Column('user_primary_id', sa.Integer(), nullable=True),
                              sa.Column('directory_default_id', sa.Integer(), nullable=True),
                              sa.Column('default_report_dashboard_id', sa.Integer(), nullable=True),
                              sa.Column('api_billing_enabled', sa.Boolean(), nullable=True),
                              sa.Column('annotations_feedback_loop_trigger_check', sa.Boolean(), nullable=True),
                              sa.Column('settings_input_video_fps', sa.Integer(), nullable=True),
                              sa.Column('readme', sa.String(), nullable=True),
                              sa.Column('member_created_id', sa.Integer(), nullable=True),
                              sa.Column('member_updated_id', sa.Integer(), nullable=True),
                              sa.Column('time_created', sa.DateTime(), nullable=True),
                              sa.Column('time_updated', sa.DateTime(), nullable=True),
                              sa.Column('label_dict', shared.database.core.JSONEncodedDict(), nullable=True),
                              sa.Column('cache_dict', shared.database.core.JSONEncodedDict(), nullable=True),
                              sa.PrimaryKeyConstraint('id')
                              )
    userbase = op.create_table('userbase',
                               sa.Column('id', sa.Integer(), nullable=False),
                               sa.Column('member_id', sa.Integer(), nullable=True),
                               sa.Column('qos_last_cached_value', sa.Float(), nullable=True),
                               sa.Column('first_name', sa.String(length=100), nullable=True),
                               sa.Column('last_name', sa.String(length=100), nullable=True),
                               sa.Column('how_hear_about_us', sa.String(), nullable=True),
                               sa.Column('company_name', sa.String(), nullable=True),
                               sa.Column('security_disable_global', sa.Boolean(), nullable=True),
                               sa.Column('security_email_verified', sa.Boolean(), nullable=True),
                               sa.Column('api_actions', sa.Boolean(), nullable=True),
                               sa.Column('api_enabled_builder_brain', sa.Boolean(), nullable=True),
                               sa.Column('api_enabled_builder', sa.Boolean(), nullable=True),
                               sa.Column('api_enabled_trainer', sa.Boolean(), nullable=True),
                               sa.Column('last_builder_or_trainer_mode', sa.String(), nullable=True),
                               sa.Column('phone_number', sa.String(), nullable=True),
                               sa.Column('city', sa.String(), nullable=True),
                               sa.Column('username', sa.String(), nullable=True),
                               sa.Column('email', sa.String(length=100), nullable=False),
                               sa.Column('password_hash', sa.String(), nullable=True),
                               sa.Column('password_attempt_count', sa.Integer(), nullable=True),
                               sa.Column('auto_commit', sa.Boolean(), nullable=True),
                               sa.Column('otp_secret', sa.String(), nullable=True),
                               sa.Column('otp_enabled', sa.Boolean(), nullable=True),
                               sa.Column('otp_backup', shared.database.core.JSONEncodedDict(), nullable=True),
                               sa.Column('otp_current_session', sa.String(), nullable=True),
                               sa.Column('otp_current_session_expiry', sa.Integer(), nullable=True),
                               sa.Column('profile_image_id', sa.Integer(), nullable=True),
                               sa.Column('profile_image_url', sa.String(), nullable=True),
                               sa.Column('profile_image_blob', sa.String(), nullable=True),
                               sa.Column('profile_image_expiry', sa.Integer(), nullable=True),
                               sa.Column('profile_image_thumb_url', sa.String(), nullable=True),
                               sa.Column('profile_image_thumb_blob', sa.String(), nullable=True),
                               sa.Column('created_time', sa.DateTime(), nullable=True),
                               sa.Column('created_remote_address', sa.String(), nullable=True),
                               sa.Column('last_time', sa.DateTime(), nullable=True),
                               sa.Column('current_ai_version_number', sa.Integer(), nullable=True),
                               sa.Column('current_project_string_id', sa.String(length=100), nullable=True),
                               sa.Column('project_current_id', sa.Integer(), nullable=True),
                               sa.Column('permissions_projects', shared.database.core.JSONEncodedDict(), nullable=True),
                               sa.Column('permissions_general', shared.database.core.JSONEncodedDict(), nullable=True),
                               sa.Column('is_super_admin', sa.Boolean(), nullable=True),
                               sa.Column('last_task_id', sa.Integer(), nullable=True),
                               sa.Column('available_for_annotation_assignment', sa.Boolean(), nullable=True),
                               sa.Column('is_annotator', sa.Boolean(), nullable=True),
                               sa.Column('signup_code_id', sa.Integer(), nullable=True),
                               sa.Column('verify_email_code_id', sa.Integer(), nullable=True),
                               sa.Column('follow_ing_count', sa.Integer(), nullable=True),
                               sa.Column('follow_ers_count', sa.Integer(), nullable=True),
                               sa.Column('signup_role', sa.String(), nullable=True),
                               sa.Column('signup_demo', sa.String(), nullable=True),
                               sa.PrimaryKeyConstraint('id')
                               )

    member = op.create_table('member',
                             sa.Column('id', sa.Integer(), nullable=False),
                             sa.Column('kind', sa.String(), nullable=True),
                             sa.Column('user_id', sa.Integer(), nullable=True),
                             sa.Column('auth_api_id', sa.Integer(), nullable=True),
                             sa.PrimaryKeyConstraint('id')
                             )

    op.create_table('address',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('line_1', sa.String(), nullable=True),
                    sa.Column('line_2', sa.String(), nullable=True),
                    sa.Column('line_3', sa.String(), nullable=True),
                    sa.Column('line_4', sa.String(), nullable=True),
                    sa.Column('locality', sa.String(), nullable=True),
                    sa.Column('region', sa.String(), nullable=True),
                    sa.Column('postcode', sa.String(), nullable=True),
                    sa.Column('country', sa.String(), nullable=True),
                    sa.Column('previous_address_id', sa.Integer(), nullable=True),
                    sa.Column('member_created_id', sa.Integer(), nullable=True),
                    sa.Column('time_created', sa.DateTime(), nullable=True),
                    sa.ForeignKeyConstraint(['member_created_id'], ['member.id'], ),
                    sa.ForeignKeyConstraint(['previous_address_id'], ['address.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('guide',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('is_visible', sa.Boolean(), nullable=True),
                    sa.Column('archived', sa.Boolean(), nullable=True),
                    sa.Column('name', sa.String(), nullable=True),
                    sa.Column('description_markdown', sa.String(), nullable=True),
                    sa.Column('history_cache', shared.database.core.JSONEncodedDict(), nullable=True),
                    sa.Column('project_id', sa.Integer(), nullable=True),
                    sa.Column('member_created_id', sa.Integer(), nullable=True),
                    sa.Column('member_updated_id', sa.Integer(), nullable=True),
                    sa.Column('time_created', sa.DateTime(), nullable=True),
                    sa.Column('time_updated', sa.DateTime(), nullable=True),
                    sa.ForeignKeyConstraint(['member_created_id'], ['member.id'], ),
                    sa.ForeignKeyConstraint(['member_updated_id'], ['member.id'], ),
                    sa.ForeignKeyConstraint(['project_id'], ['project.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )

    auth_api = op.create_table('auth_api',
                               sa.Column('id', sa.Integer(), nullable=False),
                               sa.Column('member_id', sa.Integer(), nullable=True),
                               sa.Column('created_time', sa.DateTime(), nullable=True),
                               sa.Column('client_id', sa.String(), nullable=True),
                               sa.Column('client_secret', sa.String(), nullable=True),
                               sa.Column('project_string_id', sa.String(), nullable=True),
                               sa.Column('project_id', sa.Integer(), nullable=True),
                               sa.Column('is_live', sa.Boolean(), nullable=True),
                               sa.Column('is_valid', sa.Boolean(), nullable=True),
                               sa.Column('permission_level', sa.String(), nullable=True),
                               sa.PrimaryKeyConstraint('id')
                               )

    op.create_table('attribute_template',
                    sa.Column('id', sa.BIGINT(), nullable=False),
                    sa.Column('group_id', sa.Integer(), nullable=True, index=True),  # Add Index
                    sa.Column('archived', sa.Boolean(), nullable=True),
                    sa.Column('display_order', sa.Integer(), nullable=True),
                    sa.Column('name', sa.String(), nullable=True),
                    sa.Column('kind', sa.String(), nullable=True),
                    sa.Column('value_type', sa.String(), nullable=True),
                    sa.Column('project_id', sa.Integer(), nullable=True),
                    sa.Column('member_created_id', sa.Integer(), nullable=True),
                    sa.Column('member_updated_id', sa.Integer(), nullable=True),
                    sa.Column('time_created', sa.DateTime(), nullable=True),
                    sa.Column('time_updated', sa.DateTime(), nullable=True),
                    sa.ForeignKeyConstraint(['group_id'], ['attribute_template_group.id'], ),
                    sa.ForeignKeyConstraint(['member_created_id'], ['member.id'], ),
                    sa.ForeignKeyConstraint(['member_updated_id'], ['member.id'], ),

                    sa.ForeignKeyConstraint(['project_id'], ['project.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )

    # video constraints
    # sa.ForeignKeyConstraint(['preview_image_id'], ['image.id'], table=video)
    op.create_foreign_key("video_preview_image_id_fkey", "video", "image", ["preview_image_id"], ["id"])

    # input constraints
    # sa.ForeignKeyConstraint(['directory_id'], ['working_dir.id'], table=input)
    op.create_foreign_key("input_directory_id_fkey", "input", "working_dir", ["directory_id"], ["id"])
    # sa.ForeignKeyConstraint(['file_id'], ['file.id'], table=input)
    op.create_foreign_key("input_file_id_fkey", "input", "file", ["file_id"], ["id"])
    # sa.ForeignKeyConstraint(['job_id'], ['job.id'], table=input)
    op.create_foreign_key("input_job_id_fkey", "input", "job", ["job_id"], ["id"])
    # sa.ForeignKeyConstraint(['parent_file_id'], ['file.id'], table=input)
    op.create_foreign_key("input_parent_file_id_fkey", "input", "file", ["parent_file_id"], ["id"])
    # sa.ForeignKeyConstraint(['parent_input_id'], ['input.id'], table=input)
    op.create_foreign_key("input_parent_input_id_fkey", "input", "input", ["parent_input_id"], ["id"])
    # sa.ForeignKeyConstraint(['project_id'], ['project.id'], table=input)
    op.create_foreign_key("input_project_id_fkey", "input", "project", ["project_id"], ["id"])
    # sa.ForeignKeyConstraint(['user_id'], ['userbase.id'], table=input)
    op.create_foreign_key("input_user_id_fkey", "input", "userbase", ["user_id"], ["id"])

    # task constraints
    # sa.ForeignKeyConstraint(['assignee_user_id'], ['userbase.id'], table=task)
    op.create_foreign_key("task_assignee_user_id_fkey", "task", "userbase", ["assignee_user_id"], ["id"])
    # sa.ForeignKeyConstraint(['child_primary_id'], ['task.id'], table=task)
    op.create_foreign_key("task_child_primary_id_fkey", "task", "task", ["child_primary_id"], ["id"])
    # sa.ForeignKeyConstraint(['completion_directory_id'], ['working_dir.id'], table=task)
    op.create_foreign_key("task_completion_directory_id_fkey", "task", "working_dir", ["completion_directory_id"],
                          ["id"])
    # sa.ForeignKeyConstraint(['file_id'], ['file.id'], )
    op.create_foreign_key("task_file_id_fkey", "task", "file", ["file_id"], ["id"])
    # sa.ForeignKeyConstraint(['file_original_id'], ['file.id'], table=task)
    op.create_foreign_key("task_file_original_id_fkey", "task", "file", ["file_original_id"], ["id"])
    # sa.ForeignKeyConstraint(['guide_id'], ['guide.id'], table=task)
    op.create_foreign_key("task_guide_id_fkey", "task", "guide", ["guide_id"], ["id"])
    # sa.ForeignKeyConstraint(['job_id'], ['job.id'], table=task)
    op.create_foreign_key("task_job_id_fkey", "task", "job", ["job_id"], ["id"])
    # sa.ForeignKeyConstraint(['parent_id'], ['task.id'], table=task)
    op.create_foreign_key("task_parent_id_fkey", "task", "task", ["parent_id"], ["id"])
    # sa.ForeignKeyConstraint(['project_id'], ['project.id'], table=task)
    op.create_foreign_key("task_project_id_fkey", "task", "project", ["project_id"], ["id"])
    # sa.ForeignKeyConstraint(['root_id'], ['task.id'], table=task)

    # working_dir
    # sa.ForeignKeyConstraint(['project_id'], ['project.id'], table=working_dir)
    op.create_foreign_key("working_dir_project_id_fkey", "working_dir", "project", ["project_id"], ["id"])
    # sa.ForeignKeyConstraint(['user_id'], ['userbase.id'], table=working_dir)
    op.create_foreign_key("working_dir_user_id_fkey", "working_dir", "userbase", ["user_id"], ["id"])

    # Deletion
    # sa.ForeignKeyConstraint(['member_created_id'], ['member.id'], table=deletetion)
    op.create_foreign_key("deletion_member_created_id_fkey", "deletion", "member", ["member_created_id"], ["id"])
    # sa.ForeignKeyConstraint(['member_updated_id'], ['member.id'], table=deletetion)
    op.create_foreign_key("deletion_member_updated_id_fkey", "deletion", "member", ["member_updated_id"], ["id"])

    # sa.ForeignKeyConstraint(['project_id'], ['project.id'], table=deletetion)
    # report_dashboards constraints
    # sa.ForeignKeyConstraint(['member_created_id'], ['member.id'], table=report_dashboard)
    op.create_foreign_key("report_dashboard_member_created_id_fkey", "report_dashboard", "member",
                          ["member_created_id"], ["id"])
    # sa.ForeignKeyConstraint(['member_updated_id'], ['member.id'],  table=report_dashboard)
    op.create_foreign_key("report_dashboard_member_updated_id_fkey", "report_dashboard", "member",
                          ["member_updated_id"], ["id"])

    # sa.ForeignKeyConstraint(['project_id'], ['project.id'],  table=report_dashboard)
    op.create_foreign_key("report_dashboard_project_id_fkey", "report_dashboard", "project", ["project_id"], ["id"])

    # auth_api constraints
    # sa.ForeignKeyConstraint(['member_id'], ['member.id'], table=auth_api)
    op.create_foreign_key("auth_api_member_id_fkey", "auth_api", "member", ["member_id"], ["id"])
    # sa.ForeignKeyConstraint(['project_id'], ['project.id'], table=auth_api)
    op.create_foreign_key("auth_api_project_id_fkey", "auth_api", "project", ["project_id"], ["id"])

    # Member constraints
    # sa.ForeignKeyConstraint(['auth_api_id'], ['auth_api.id'], table=member)
    op.create_foreign_key("member_auth_api_id_fkey", "member", "auth_api", ["auth_api_id"], ["id"])
    # sa.ForeignKeyConstraint(['user_id'], ['userbase.id'], table=member)
    op.create_foreign_key("member_user_id_fkey", "member", "userbase", ["user_id"], ["id"])

    # Project constraints
    # sa.ForeignKeyConstraint(['default_report_dashboard_id'], ['report_dashboard.id'], table=project)
    op.create_foreign_key("project_default_report_dashboard_id_fkey", "project", "report_dashboard",
                          ["default_report_dashboard_id"], ["id"])
    # sa.ForeignKeyConstraint(['deletion_id'], ['deletion.id'], table=project)
    op.create_foreign_key("project_deletion_id_fkey", "project", "deletion", ["deletion_id"], ["id"])
    # sa.ForeignKeyConstraint(['directory_default_id'], ['working_dir.id'], table=project)
    op.create_foreign_key("project_directory_default_id_fkey", "project", "working_dir", ["directory_default_id"],
                          ["id"])

    # sa.ForeignKeyConstraint(['member_created_id'], ['member.id'], table=project)
    op.create_foreign_key("project_member_created_id_fkey", "project", "member", ["member_created_id"], ["id"])
    # sa.ForeignKeyConstraint(['member_updated_id'], ['member.id'], table=project)
    op.create_foreign_key("project_member_updated_id_fkey", "project", "member", ["member_updated_id"], ["id"])
    # sa.ForeignKeyConstraint(['user_primary_id'], ['userbase.id'], table=project)
    op.create_foreign_key("project_user_primary_id_fkey", "project", "userbase", ["user_primary_id"], ["id"])

    # Userbase constraints
    # sa.ForeignKeyConstraint(['last_task_id'], ['task.id'], table=userbase)
    op.create_foreign_key("userbase_last_task_id_fkey", "userbase", "task", ["last_task_id"], ["id"])
    # sa.ForeignKeyConstraint(['member_id'], ['member.id'], table=userbase)
    op.create_foreign_key("userbase_member_id_fkey", "userbase", "member", ["member_id"], ["id"])
    # sa.ForeignKeyConstraint(['profile_image_id'], ['image.id'], table=userbase)
    op.create_foreign_key("userbase_profile_image_id_fkey", "userbase", "image", ["profile_image_id"], ["id"])
    # sa.ForeignKeyConstraint(['project_current_id'], ['project.id'], table=userbase)
    op.create_foreign_key("userbase_project_current_id_fkey", "userbase", "project", ["project_current_id"], ["id"])
    # sa.ForeignKeyConstraint(['signup_code_id'], ['signup_code.id'], table=userbase)
    op.create_foreign_key("userbase_signup_code_id_fkey", "userbase", "signup_code", ["signup_code_id"], ["id"])
    # sa.ForeignKeyConstraint(['verify_email_code_id'], ['signup_code.id'], table=userbase)
    op.create_foreign_key("userbase_verify_email_code_id_fkey", "userbase", "signup_code", ["verify_email_code_id"],
                          ["id"])

    # File constraints
    # sa.ForeignKeyConstraint(['child_primary_id'], ['file.id'], table=file)
    op.create_foreign_key("file_child_primary_id_fkey", "file", "file", ["child_primary_id"], ["id"])
    # sa.ForeignKeyConstraint(['image_id'], ['image.id'], table=file)
    op.create_foreign_key("file_image_id_fkey", "file", "image", ["image_id"], ["id"])
    # sa.ForeignKeyConstraint(['input_id'], ['input.id'], table=file)
    op.create_foreign_key("file_input_id_fkey", "file", "input", ["input_id"], ["id"])
    # sa.ForeignKeyConstraint(['job_id'], ['job.id'], table=file)
    op.create_foreign_key("file_job_id_fkey", "file", "job", ["job_id"], ["id"])
    # sa.ForeignKeyConstraint(['label_id'], ['label.id'], table=file)
    op.create_foreign_key("file_label_id_fkey", "file", "label", ["label_id"], ["id"])
    # sa.ForeignKeyConstraint(['member_created_id'], ['member.id'], table=file)
    op.create_foreign_key("file_member_created_id_fkey", "file", "member", ["member_created_id"], ["id"])
    # sa.ForeignKeyConstraint(['member_updated_id'], ['member.id'], table=file)
    op.create_foreign_key("file_member_updated_id_fkey", "file", "member", ["member_updated_id"], ["id"])
    # sa.ForeignKeyConstraint(['parent_id'], ['file.id'], table=file)
    op.create_foreign_key("file_parent_id_fkey", "file", "file", ["parent_id"], ["id"])
    # sa.ForeignKeyConstraint(['project_id'], ['project.id'], table=file)
    op.create_foreign_key("file_project_id_fkey", "file", "project", ["project_id"], ["id"])
    # sa.ForeignKeyConstraint(['root_id'], ['file.id'], table=file)
    op.create_foreign_key("file_root_id_fkey", "file", "file", ["root_id"], ["id"])
    # sa.ForeignKeyConstraint(['video_id'], ['video.id'], table=file)
    op.create_foreign_key("file_video_id_fkey", "file", "video", ["video_id"], ["id"])
    # sa.ForeignKeyConstraint(['video_parent_file_id'], ['file.id'], table=file)
    op.create_foreign_key("file_video_parent_file_id_fkey", "file", "file", ["child_primary_id"], ["id"])

    # Attribute template group constraints
    # sa.ForeignKeyConstraint(['member_created_id'], ['member.id'], table=attribute_template_group)
    op.create_foreign_key("attribute_template_group_member_created_id_fkey", "attribute_template_group", "member",
                          ["member_created_id"], ["id"])
    # sa.ForeignKeyConstraint(['member_updated_id'], ['member.id'], table=attribute_template_group)
    op.create_foreign_key("attribute_template_group_member_updated_id_fkey", "attribute_template_group", "member",
                          ["member_updated_id"], ["id"])

    # sa.ForeignKeyConstraint(['parent_id'], ['attribute_template.id'], table=attribute_template_group)
    op.create_foreign_key("attribute_template_group_parent_id_fkey", "attribute_template_group", "attribute_template",
                          ["parent_id"], ["id"])
    # sa.ForeignKeyConstraint(['project_id'], ['project.id'], table=attribute_template_group)
    op.create_foreign_key("attribute_template_group_project_id_fkey", "attribute_template_group", "project",
                          ["project_id"], ["id"])
    # sa.ForeignKeyConstraint(['root_id'], ['attribute_template_group.id'], table=attribute_template_group)
    op.create_foreign_key("attribute_template_group_root_id_fkey", "attribute_template_group",
                          "attribute_template_group", ["root_id"], ["id"])

    # Job constraints
    # sa.ForeignKeyConstraint(['completion_directory_id'], ['working_dir.id'], table=job)
    op.create_foreign_key("job_completion_directory_id_fkey", "job", "working_dir", ["completion_directory_id"], ["id"])
    # sa.ForeignKeyConstraint(['directory_id'], ['working_dir.id'], table=job)
    op.create_foreign_key("job_directory_id_fkey", "job", "working_dir", ["directory_id"], ["id"])

    # sa.ForeignKeyConstraint(['guide_default_id'], ['guide.id'], table=job)
    op.create_foreign_key("job_guide_default_id_fkey", "job", "guide", ["guide_default_id"], ["id"])
    # sa.ForeignKeyConstraint(['guide_review_id'], ['guide.id'], table=job)
    op.create_foreign_key("job_guide_review_id_fkey", "job", "guide", ["guide_review_id"], ["id"])
    # sa.ForeignKeyConstraint(['member_created_id'], ['member.id'], table=job)
    op.create_foreign_key("job_member_created_id_fkey", "job", "guide", ["guide_review_id"], ["id"])
    # sa.ForeignKeyConstraint(['member_updated_id'], ['member.id'], table=job)
    op.create_foreign_key("job_member_updated_id_fkey", "job", "member", ["member_updated_id"], ["id"])
    # sa.ForeignKeyConstraint(['parent_id'], ['job.id'], table=job)
    op.create_foreign_key("job_parent_id_fkey", "job", "job", ["parent_id"], ["id"])
    # sa.ForeignKeyConstraint(['project_id'], ['project.id'], table=job)
    op.create_foreign_key("job_project_id_fkey", "job", "project", ["project_id"], ["id"])
    # sa.ForeignKeyConstraint(['root_id'], ['job.id'], table=job)
    op.create_foreign_key("job_root_id_fkey", "job", "job", ["root_id"], ["id"])

    op.create_table('activity_interpolation',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('instance_group_list', shared.database.core.JSONEncodedDict(), nullable=True),
                    sa.PrimaryKeyConstraint('id')
                    )

    op.create_table('tag',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('is_public', sa.Boolean(), nullable=True),
                    sa.Column('count', sa.Integer(), nullable=True),
                    sa.Column('name', sa.String(length=64), nullable=True),
                    sa.PrimaryKeyConstraint('id')
                    )

    op.create_table('task_report',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.PrimaryKeyConstraint('id')
                    )

    op.create_table('attribute_template_group_to_file',
                    sa.Column('attribute_template_group_id', sa.Integer(), nullable=False),
                    sa.Column('file_id', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(['attribute_template_group_id'], ['attribute_template_group.id'], ),
                    sa.ForeignKeyConstraint(['file_id'], ['file.id'], ),
                    sa.PrimaryKeyConstraint('attribute_template_group_id', 'file_id')
                    )

    op.create_table('connection_base',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('name', sa.String(), nullable=True),
                    sa.Column('archived', sa.Boolean(), nullable=True),
                    sa.Column('is_active', sa.Boolean(), nullable=True),
                    sa.Column('permission_scope', sa.String(), nullable=True),
                    sa.Column('integration_name', sa.String(), nullable=True),
                    sa.Column('integration_version', sa.Integer(), nullable=True),
                    sa.Column('private_id', sa.String(), nullable=True),
                    sa.Column('private_secret_encrypted', sa.LargeBinary(), nullable=True),
                    sa.Column('account_email', sa.String(), nullable=True),
                    sa.Column('project_id_external', sa.String(), nullable=True),
                    sa.Column('project_id', sa.Integer(), nullable=True),
                    sa.Column('member_created_id', sa.Integer(), nullable=True),
                    sa.Column('member_updated_id', sa.Integer(), nullable=True),
                    sa.Column('time_created', sa.DateTime(), nullable=True),
                    sa.Column('time_updated', sa.DateTime(), nullable=True),
                    sa.ForeignKeyConstraint(['member_created_id'], ['member.id'], ),
                    sa.ForeignKeyConstraint(['member_updated_id'], ['member.id'], ),
                    sa.ForeignKeyConstraint(['project_id'], ['project.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )

    op.create_table('event',
                    sa.Column('id', sa.BIGINT(), nullable=False),
                    sa.Column('kind', sa.String(), nullable=True),
                    sa.Column('description', sa.String(), nullable=True),
                    sa.Column('success', sa.Boolean(), nullable=True),
                    sa.Column('error_log', shared.database.core.JSONEncodedDict(), nullable=True),
                    sa.Column('run_time', sa.Float(), nullable=True),
                    sa.Column('link', sa.String(), nullable=True),
                    sa.Column('project_id', sa.Integer(), nullable=True),
                    sa.Column('input_id', sa.Integer(), nullable=True),
                    sa.Column('member_id', sa.Integer(), nullable=True),
                    sa.Column('file_id', sa.Integer(), nullable=True),
                    sa.Column('report_template_id', sa.Integer(), nullable=True),
                    sa.Column('report_data', shared.database.core.JSONEncodedDict(), nullable=True),
                    sa.Column('report_template_data', shared.database.core.JSONEncodedDict(), nullable=True),
                    sa.Column('time_created', sa.DateTime(), nullable=True),
                    sa.ForeignKeyConstraint(['file_id'], ['file.id'], ),
                    sa.ForeignKeyConstraint(['input_id'], ['input.id'], ),
                    sa.ForeignKeyConstraint(['member_id'], ['member.id'], ),
                    sa.ForeignKeyConstraint(['project_id'], ['project.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('export',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('created_time', sa.DateTime(), nullable=True),
                    sa.Column('type', sa.String(), nullable=True),
                    sa.Column('kind', sa.String(), nullable=True),
                    sa.Column('archived', sa.Boolean(), nullable=True),
                    sa.Column('masks', sa.Boolean(), nullable=True),
                    sa.Column('source', sa.String(), nullable=True),
                    sa.Column('status', sa.String(), nullable=True),
                    sa.Column('status_text', sa.String(), nullable=True),
                    sa.Column('percent_complete', sa.Float(), nullable=True),
                    sa.Column('file_comparison_mode', sa.String(), nullable=True),
                    sa.Column('file_list_length', sa.Integer(), nullable=True),
                    sa.Column('description', sa.String(), nullable=True),
                    sa.Column('working_dir_id', sa.Integer(), nullable=True),
                    sa.Column('project_id', sa.Integer(), nullable=True),
                    sa.Column('user_id', sa.Integer(), nullable=True),
                    sa.Column('job_id', sa.Integer(), nullable=True),
                    sa.Column('task_id', sa.Integer(), nullable=True),
                    sa.Column('yaml_blob_name', sa.String(), nullable=True),
                    sa.Column('json_blob_name', sa.String(), nullable=True),
                    sa.Column('tf_records_blob_name', sa.String(), nullable=True),
                    sa.Column('ann_is_complete', sa.Boolean(), nullable=True),
                    sa.ForeignKeyConstraint(['job_id'], ['job.id'], ),
                    sa.ForeignKeyConstraint(['project_id'], ['project.id'], ),
                    sa.ForeignKeyConstraint(['task_id'], ['task.id'], ),
                    sa.ForeignKeyConstraint(['user_id'], ['userbase.id'], ),
                    sa.ForeignKeyConstraint(['working_dir_id'], ['working_dir.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )

    op.create_table('project_directory_list',
                    sa.Column('working_dir_id', sa.Integer(), nullable=False),
                    sa.Column('project_id', sa.Integer(), nullable=False),
                    sa.Column('nickname', sa.String(), nullable=True),
                    sa.Column('archived', sa.Boolean(), nullable=True),
                    sa.Column('created_time', sa.DateTime(), nullable=True),
                    sa.Column('last_time', sa.DateTime(), nullable=True),
                    sa.ForeignKeyConstraint(['project_id'], ['project.id'], ),
                    sa.ForeignKeyConstraint(['working_dir_id'], ['working_dir.id'], ),
                    sa.PrimaryKeyConstraint('working_dir_id', 'project_id')
                    )
    op.create_table('project_settings',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('project_id', sa.Integer(), nullable=True),
                    sa.Column('fan_on', sa.Boolean(), nullable=True),
                    sa.Column('fan_trigger_interval', sa.Integer(), nullable=True),
                    sa.Column('fan_inference_size', sa.Integer(), nullable=True),
                    sa.Column('fan_type', sa.String(), nullable=True),
                    sa.Column('fan_inference_minimum', sa.Float(), nullable=True),
                    sa.Column('fan_method', sa.String(), nullable=True),
                    sa.Column('fan_sub_method', sa.String(), nullable=True),
                    sa.ForeignKeyConstraint(['project_id'], ['project.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('project_star',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('created_time', sa.DateTime(), nullable=True),
                    sa.Column('user_id', sa.Integer(), nullable=True),
                    sa.Column('project_id', sa.Integer(), nullable=True),
                    sa.ForeignKeyConstraint(['project_id'], ['project.id'], ),
                    sa.ForeignKeyConstraint(['user_id'], ['userbase.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('project_tag',
                    sa.Column('project_id', sa.Integer(), nullable=False),
                    sa.Column('tag_id', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(['project_id'], ['project.id'], ),
                    sa.ForeignKeyConstraint(['tag_id'], ['tag.id'], ),
                    sa.PrimaryKeyConstraint('project_id', 'tag_id')
                    )
    op.create_table('report_template',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('name', sa.String(), nullable=True),
                    sa.Column('diffgram_wide_default', sa.Boolean(), nullable=True),
                    sa.Column('archived', sa.Boolean(), nullable=True),
                    sa.Column('scope', sa.String(), nullable=True),
                    sa.Column('project_id', sa.Integer(), nullable=True),
                    sa.Column('member_created_id', sa.Integer(), nullable=True),
                    sa.Column('member_updated_id', sa.Integer(), nullable=True),
                    sa.Column('time_created', sa.DateTime(), nullable=True),
                    sa.Column('time_updated', sa.DateTime(), nullable=True),
                    sa.Column('base_class_string', sa.String(), nullable=True),
                    sa.Column('group_by', sa.String(), nullable=True),
                    sa.Column('period', sa.String(), nullable=True),
                    sa.Column('date_period_unit', sa.String(), nullable=True),
                    sa.Column('compare_to_previous_period', sa.Boolean(), nullable=True),
                    sa.Column('job_id', sa.Integer(), nullable=True),
                    sa.Column('filter_by_items', shared.database.core.JSONEncodedDict(), nullable=True),
                    sa.Column('report_dashboard_id', sa.Integer(), nullable=True),
                    sa.Column('is_visible_on_report_dashboard', sa.Boolean(), nullable=True),
                    sa.Column('view_type', sa.String(), nullable=True),
                    sa.Column('view_sub_type', sa.String(), nullable=True),
                    sa.ForeignKeyConstraint(['job_id'], ['job.id'], ),
                    sa.ForeignKeyConstraint(['member_created_id'], ['member.id'], ),
                    sa.ForeignKeyConstraint(['member_updated_id'], ['member.id'], ),
                    sa.ForeignKeyConstraint(['project_id'], ['project.id'], ),
                    sa.ForeignKeyConstraint(['report_dashboard_id'], ['report_dashboard.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('sequence',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('label_file_id', sa.Integer(), nullable=True),
                    sa.Column('has_changes', sa.Boolean(), nullable=True),
                    sa.Column('single_frame', sa.Boolean(), nullable=True),
                    sa.Column('keyframe_list', shared.database.core.JSONEncodedDict(), nullable=True),
                    sa.Column('video_file_id', sa.Integer(), nullable=True),
                    sa.Column('number', sa.Integer(), nullable=True),
                    sa.Column('instance_preview_cache', shared.database.core.JSONEncodedDict(), nullable=True),
                    sa.Column('cache_expiry', sa.Integer(), nullable=True),
                    sa.Column('archived', sa.Boolean(), nullable=True),
                    sa.ForeignKeyConstraint(['label_file_id'], ['file.id'], ),
                    sa.ForeignKeyConstraint(['video_file_id'], ['file.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('user_follow',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('created_time', sa.DateTime(), nullable=True),
                    sa.Column('user_id', sa.Integer(), nullable=True),
                    sa.Column('following_user_id', sa.Integer(), nullable=True),
                    sa.ForeignKeyConstraint(['following_user_id'], ['userbase.id'], ),
                    sa.ForeignKeyConstraint(['user_id'], ['userbase.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('user_login_history',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('created_time', sa.DateTime(), nullable=True),
                    sa.Column('success', sa.Boolean(), nullable=True),
                    sa.Column('otp_success', sa.Boolean(), nullable=True),
                    sa.Column('remote_address', sa.String(), nullable=True),
                    sa.Column('user_id', sa.Integer(), nullable=True),
                    sa.ForeignKeyConstraint(['user_id'], ['userbase.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('user_to_job',
                    sa.Column('job_id', sa.Integer(), nullable=False),
                    sa.Column('user_id', sa.Integer(), nullable=False),
                    sa.Column('status', sa.String(), nullable=True),
                    sa.Column('trainer_auction_payout_per_instance_last', sa.Integer(), nullable=True),
                    sa.ForeignKeyConstraint(['job_id'], ['job.id'], ),
                    sa.ForeignKeyConstraint(['user_id'], ['userbase.id'], ),
                    sa.PrimaryKeyConstraint('job_id', 'user_id')
                    )

    op.create_table('userbase_project',
                    sa.Column('user_id', sa.Integer(), nullable=False),
                    sa.Column('project_id', sa.Integer(), nullable=False),
                    sa.Column('working_dir_id', sa.Integer(), nullable=True),
                    sa.Column('created_time', sa.DateTime(), nullable=True),
                    sa.Column('last_time', sa.DateTime(), nullable=True),
                    sa.ForeignKeyConstraint(['project_id'], ['project.id'], ),
                    sa.ForeignKeyConstraint(['user_id'], ['userbase.id'], ),
                    sa.ForeignKeyConstraint(['working_dir_id'], ['working_dir.id'], ),
                    sa.PrimaryKeyConstraint('user_id', 'project_id')
                    )

    op.create_table('workingdir_file_link',
                    sa.Column('working_dir_id', sa.Integer(), nullable=False),
                    sa.Column('file_id', sa.Integer(), nullable=False),
                    sa.Column('type', sa.String(), nullable=True),
                    sa.Column('committed', sa.Boolean(), nullable=True),
                    sa.Column('count', sa.Integer(), nullable=True),
                    sa.Column('created_time', sa.DateTime(), nullable=True),
                    sa.Column('last_time', sa.DateTime(), nullable=True),
                    sa.ForeignKeyConstraint(['file_id'], ['file.id'], ),
                    sa.ForeignKeyConstraint(['working_dir_id'], ['working_dir.id'], ),
                    sa.PrimaryKeyConstraint('working_dir_id', 'file_id')
                    )

    op.create_table('instance',
                    sa.Column('id', sa.BIGINT(), nullable=False),
                    sa.Column('created_time', sa.DateTime(), nullable=True),
                    sa.Column('last_updated_time', sa.DateTime(), nullable=True),
                    sa.Column('project_id', sa.Integer(), nullable=True),
                    sa.Column('type', sa.String(), nullable=True),
                    sa.Column('hash', sa.String(), nullable=True),
                    sa.Column('status', sa.String(), nullable=True),
                    sa.Column('sequence_id', sa.Integer(), nullable=True),
                    sa.Column('number', sa.Integer(), nullable=True),
                    sa.Column('frame_number', sa.Integer(), nullable=True),
                    sa.Column('global_frame_number', sa.Integer(), nullable=True),
                    sa.Column('machine_made', sa.Boolean(), nullable=True),
                    sa.Column('interpolated', sa.Boolean(), nullable=True),
                    sa.Column('verified', sa.Boolean(), nullable=True),
                    sa.Column('soft_delete', sa.Boolean(), nullable=True),
                    sa.Column('label_file_id', sa.Integer(), nullable=True),
                    sa.Column('file_id', sa.Integer(), nullable=True),
                    sa.Column('points', shared.database.core.JSONEncodedDict(), nullable=True),
                    sa.Column('mask_url', sa.String(), nullable=True),
                    sa.Column('mask_blob_dir', shared.database.core.JSONEncodedDict(), nullable=True),
                    sa.Column('mask_url_expiry', sa.Integer(), nullable=True),
                    sa.Column('x_min', sa.Integer(), nullable=True),
                    sa.Column('y_min', sa.Integer(), nullable=True),
                    sa.Column('x_max', sa.Integer(), nullable=True),
                    sa.Column('y_max', sa.Integer(), nullable=True),
                    sa.Column('width', sa.Integer(), nullable=True),
                    sa.Column('height', sa.Integer(), nullable=True),
                    sa.Column('preview_image_url', sa.String(), nullable=True),
                    sa.Column('preview_image_blob_dir', sa.String(), nullable=True),
                    sa.Column('preview_image_url_expiry', sa.Integer(), nullable=True),
                    sa.Column('rating', sa.Integer(), nullable=True),
                    sa.Column('rating_comment', sa.String(), nullable=True),
                    sa.Column('attribute_groups', shared.database.core.JSONEncodedDict(), nullable=True),
                    sa.Column('member_created_id', sa.Integer(), nullable=True),
                    sa.ForeignKeyConstraint(['file_id'], ['file.id'], ),
                    sa.ForeignKeyConstraint(['label_file_id'], ['file.id'], ),
                    sa.ForeignKeyConstraint(['member_created_id'], ['member.id'], ),
                    sa.ForeignKeyConstraint(['project_id'], ['project.id'], ),
                    sa.ForeignKeyConstraint(['sequence_id'], ['sequence.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )

    # Create Indexes…

    op.create_index('index__task_job_id', 'task', ['job_id'])
    op.create_index('index__task_file_id', 'task', ['file_id'])
    op.create_index('index__task_project_id', 'task', ['project_id'])
    op.create_index('index__task_status', 'task', ['status'])

    op.create_index('index__video_parent_file_id__and__frame_number', 'file', ['video_parent_file_id', 'frame_number'])
    op.create_index('index__processing_deferred__archived',
                    'input',
                    ['processing_deferred', 'archived'],
                    postgresql_where=sa.text(
                        "processing_deferred IS TRUE"
                    ))
    op.create_index('index__file_id__and__frame_number', 'instance', ['file_id', 'frame_number'])
    op.create_index('index__sequence_id__and__soft_delete', 'instance', ['sequence_id', 'soft_delete'])
    op.create_index('index__video_file_id__and__label_file_id', 'sequence', ['video_file_id', 'label_file_id'])

    op.add_column('task', sa.Column('incoming_directory_id', sa.Integer, sa.ForeignKey('working_dir.id')))
    op.add_column('job', sa.Column('output_dir_action', sa.String()))
    op.add_column('job', sa.Column('pending_initial_dir_sync', sa.Boolean()))
    op.add_column('working_dir', sa.Column('type', sa.String()))

    op.create_table('sync_event',
                    sa.Column('id', BIGINT, nullable=False, primary_key=True),
                    sa.Column('dataset_source_id', sa.Integer(), nullable=True),
                    sa.Column('dataset_destination_id', sa.Integer(), nullable=True),
                    sa.Column('created_date', sa.DateTime(), nullable=True),
                    sa.Column('description', sa.String(), nullable=True),
                    sa.Column('file_id', sa.Integer(), nullable=True),
                    sa.Column('job_id', sa.Integer(), nullable=True),
                    sa.Column('input_id', sa.Integer(), nullable=True),
                    sa.Column('project_id', sa.Integer(), nullable=True),
                    sa.Column('created_task_id', sa.Integer(), nullable=True),
                    sa.Column('completed_task_id', sa.Integer(), nullable=True),
                    sa.Column('new_file_copy_id', sa.Integer(), nullable=True),
                    sa.Column('dataset_file_link_copy_id', sa.Integer(), nullable=True),
                    sa.Column('dataset_file_link_move_id', sa.Integer(), nullable=True),
                    sa.Column('transfer_action', sa.String(), nullable=True),
                    sa.Column('event_effect_type', sa.String(), nullable=True),
                    sa.Column('event_trigger_type', sa.String(), nullable=True),
                    sa.Column('processing_deferred', sa.Boolean(), nullable=True),
                    sa.Column('time_last_attempted', sa.DateTime(), nullable=True),
                    sa.Column('status', sa.String(), nullable=True),
                    sa.Column('percent_complete', sa.Float(), nullable=True),
                    sa.Column('member_created_id', sa.Integer(), nullable=True),
                    sa.Column('member_updated_id', sa.Integer(), nullable=True),
                    )

    # Add constraints
    op.create_foreign_key("dataset_source_id_fkey", "sync_event", "working_dir", ["dataset_source_id"], ["id"])
    op.create_foreign_key("dataset_destination_id_fkey", "sync_event", "working_dir", ["dataset_destination_id"],
                          ["id"])
    op.create_foreign_key("file_id_fkey", "sync_event", "file", ["file_id"], ["id"])
    op.create_foreign_key("job_id_fkey", "sync_event", "job", ["job_id"], ["id"])
    op.create_foreign_key("input_id_fkey", "sync_event", "input", ["input_id"], ["id"])
    op.create_foreign_key("project_id_fkey", "sync_event", "project", ["project_id"], ["id"])
    op.create_foreign_key("created_task_id_fkey", "sync_event", "task", ["created_task_id"], ["id"])
    op.create_foreign_key("completed_task_id_fkey", "sync_event", "task", ["completed_task_id"], ["id"])
    op.create_foreign_key("new_file_copy_id_fkey", "sync_event", "file", ["new_file_copy_id"], ["id"])
    op.create_foreign_key("member_created_id_fkey", "sync_event", "member", ["member_created_id"], ["id"])
    op.create_foreign_key("member_updated_id_fkey", "sync_event", "member", ["member_updated_id"], ["id"])

    op.add_column('job', sa.Column('interface_connection_id', sa.Integer()))
    op.create_foreign_key("interface_connection_id_fkey", "job", "connection_base",
                          ["interface_connection_id"], ["id"])

    op.create_table('external_map',
                    sa.Column('id', sa.BIGINT, nullable=False, primary_key=True),
                    sa.Column('external_id', sa.String(), nullable=True),
                    sa.Column('type', sa.String(), nullable=True),
                    sa.Column('diffgram_class_string', sa.String(), nullable=True),
                    sa.Column('url', sa.String(), nullable=True),
                    sa.Column('project_id', sa.Integer(), nullable=True),
                    sa.Column('job_id', sa.Integer(), nullable=True),
                    sa.Column('file_id', sa.Integer(), nullable=True),
                    sa.Column('task_id', sa.Integer(), nullable=True),
                    sa.Column('attribute_template_group_id', sa.Integer(), nullable=True),
                    sa.Column('user_id', sa.Integer(), nullable=True),
                    sa.Column('connection_id', sa.Integer(), nullable=True),
                    sa.Column('dataset_id', sa.Integer(), nullable=True),
                    sa.Column('member_created_id', sa.Integer(), nullable=True),
                    sa.Column('member_updated_id', sa.Integer(), nullable=True),
                    sa.Column('time_created', sa.DateTime(), nullable=True),
                    sa.Column('time_updated', sa.DateTime(), nullable=True),
                    )

    # Add constraints
    op.create_foreign_key("project_id_fkey", "external_map", "project", ["project_id"], ["id"])
    op.create_foreign_key("job_id_fkey", "external_map", "job", ["job_id"], ["id"])
    op.create_foreign_key("file_id_fkey", "external_map", "file", ["file_id"], ["id"])
    op.create_foreign_key("task_id_fkey", "external_map", "task", ["task_id"], ["id"])
    op.create_foreign_key("attribute_template_group_id_fkey", "external_map", "attribute_template_group",
                          ["attribute_template_group_id"], ["id"])
    op.create_foreign_key("user_id_fkey", "external_map", "userbase", ["user_id"], ["id"])
    op.create_foreign_key("member_created_id_fkey", "external_map", "member", ["member_created_id"], ["id"])
    op.create_foreign_key("member_updated_id_fkey", "external_map", "member", ["member_updated_id"], ["id"])

    op.create_foreign_key("report_template_id_fkey", "event", "report_template", ["report_template_id"], ["id"])

    # Add new columns
    op.add_column('job', sa.Column('default_external_map_id', sa.Integer()))
    op.add_column('working_dir', sa.Column('default_external_map_id', sa.Integer()))
    op.add_column('task', sa.Column('default_external_map_id', sa.Integer()))
    op.add_column('file', sa.Column('default_external_map_id', sa.Integer()))
    op.add_column('project', sa.Column('default_external_map_id', sa.Integer()))
    op.add_column('attribute_template_group', sa.Column('default_external_map_id', sa.Integer()))

    op.add_column('sync_event', sa.Column('execution_log', sa.String()))

    op.create_foreign_key("default_external_map_id_fkey", "job", "external_map", ["default_external_map_id"], ["id"])
    op.create_foreign_key("default_external_map_id_fkey", "working_dir", "external_map", ["default_external_map_id"],
                          ["id"])
    op.create_foreign_key("default_external_map_id_fkey", "task", "external_map", ["default_external_map_id"], ["id"])
    op.create_foreign_key("default_external_map_id_fkey", "file", "external_map", ["default_external_map_id"], ["id"])
    op.create_foreign_key("default_external_map_id_fkey", "project", "external_map", ["default_external_map_id"],
                          ["id"])
    op.create_foreign_key("default_external_map_id_fkey", "attribute_template_group", "external_map",
                          ["default_external_map_id"], ["id"])

    # Add JobLaunch Table
    op.create_table('job_launch',
                    sa.Column('id', sa.BIGINT, nullable=False, primary_key=True),
                    sa.Column('job_id', sa.Integer(), nullable=True),
                    sa.Column('retry_count', sa.Integer(), nullable=True),
                    sa.Column('percent_complete', sa.Integer(), nullable=True),
                    sa.Column('status', sa.String(), nullable=True),
                    sa.Column('job_launch_info', sa.String(), nullable=True),
                    sa.Column('log', sa.String(), nullable=True),
                    sa.Column('member_created_id', sa.Integer(), nullable=True),
                    sa.Column('member_updated_id', sa.Integer(), nullable=True),
                    sa.Column('time_created', sa.DateTime(), nullable=True),
                    sa.Column('time_intial_setup_completed', sa.DateTime(), nullable=True),
                    sa.Column('time_updated', sa.DateTime(), nullable=True),
                    sa.Column('time_completed', sa.DateTime(), nullable=True),
                    )
    op.create_foreign_key("job_id_id_fkey", "job_launch", "job", ["job_id"], ["id"])
    op.create_foreign_key("member_created_id_fkey", "job_launch", "member", ["member_created_id"], ["id"])
    op.create_foreign_key("member_updated_id_fkey", "job_launch", "member", ["member_updated_id"], ["id"])
    # Add JobLaunchQueue
    op.create_table('job_launch_queue',
                    sa.Column('id', sa.BIGINT, nullable=False, primary_key=True),
                    sa.Column('job_launch_id', sa.Integer(), nullable=True),
                    sa.Column('priority', sa.Integer(), nullable=True),
                    )
    op.create_foreign_key("job_launch_id_fkey", "job_launch_queue", "job_launch", ["job_launch_id"], ["id"])

    # Add JobWorkingDir
    op.create_table('job_working_dir',
                    sa.Column('id', sa.BIGINT, nullable=False, primary_key=True),
                    sa.Column('job_id', sa.Integer(), nullable=True),
                    sa.Column('sync_type', sa.String(), nullable=True),
                    sa.Column('working_dir_id', sa.Integer(), nullable=True),
                    )
    op.create_foreign_key("job_id_fkey", "job_working_dir", "job", ["job_id"], ["id"])
    op.create_foreign_key("working_dir_id_fkey", "job_working_dir", "working_dir", ["working_dir_id"], ["id"])

    # Cache column on job
    op.add_column('job', sa.Column('cache_dict', sa.String()))

    op.add_column('instance', sa.Column('task_id', sa.Integer, sa.ForeignKey('task.id')))
    op.add_column('report_template', sa.Column('task_id', sa.Integer, sa.ForeignKey('task.id')))
    op.add_column('file', sa.Column('task_id', sa.Integer, sa.ForeignKey('task.id')))

    # Add TextFile Table
    op.create_table('text_file',
                    sa.Column('id', sa.BIGINT, nullable=False, primary_key=True),
                    sa.Column('original_filename', sa.String(), nullable=True),
                    sa.Column('description', sa.String(), nullable=True),
                    sa.Column('soft_delete', sa.Boolean(), default=False),
                    sa.Column('mask_joint_url', sa.String(), nullable=True),
                    sa.Column('mask_joint_blob_name', sa.String(), nullable=True),
                    sa.Column('is_inference', sa.Boolean(), nullable=True),
                    sa.Column('annotation_status', sa.String(), nullable=True),
                    sa.Column('is_annotation_example', sa.String(), nullable=True),
                    sa.Column('url_annotation_example', sa.String(), nullable=True),
                    sa.Column('url_public', sa.String(), nullable=True),
                    sa.Column('url_signed', sa.String(), nullable=True),
                    sa.Column('url_signed_blob_path', sa.String(), nullable=True),
                    sa.Column('url_signed_expiry', sa.Integer(), nullable=True),
                    sa.Column('url_signed_expiry_force_refresh', sa.Integer(), nullable=True),
                    sa.Column('time_created', sa.DateTime(), default=datetime.datetime.utcnow),
                    sa.Column('time_updated', sa.DateTime(), default=datetime.datetime.utcnow),
                    )
    # textfile col on input
    op.add_column('file', sa.Column('text_file_id', sa.Integer()))
    op.create_foreign_key("text_file_id_fkey", "file", "text_file", ["text_file_id"], ["id"])

    op.add_column('instance', sa.Column('start_sentence', sa.Integer()))
    op.add_column('instance', sa.Column('end_sentence', sa.Integer()))
    op.add_column('instance', sa.Column('start_token', sa.Integer()))
    op.add_column('instance', sa.Column('end_token', sa.Integer()))
    op.add_column('instance', sa.Column('start_char', sa.Integer()))
    op.add_column('instance', sa.Column('end_char', sa.Integer()))
    op.add_column('instance', sa.Column('sentence', sa.Integer()))

    op.add_column('input', sa.Column('task_id', sa.Integer()))
    op.create_foreign_key("task_id_fkey", "input", "task", ["task_id"], ["id"])
    op.add_column('input', sa.Column('task_action', sa.String()))

    op.add_column('external_map', sa.Column('instance_id', sa.Integer()))
    op.create_foreign_key("instance_id_fkey", "external_map", "instance", ["instance_id"], ["id"])

    op.add_column('input', sa.Column('external_map_id', sa.Integer()))
    op.create_foreign_key("external_map_id_fkey", "input", "external_map", ["external_map_id"], ["id"])
    op.add_column('input', sa.Column('external_map_action', sa.String()))

    op.add_column('job', sa.Column('send_tasks_to_external_provider_on_launch', sa.Boolean()))

    op.add_column('event', sa.Column('task_id', sa.Integer()))
    op.create_foreign_key("task_id_fkey", "event", "task", ["task_id"], ["id"])

    op.add_column('event', sa.Column('job_id', sa.Integer()))
    op.create_foreign_key("job_id_fkey", "event", "job", ["job_id"], ["id"])

    op.create_table('notification_relation',
                    sa.Column('id', sa.BIGINT, nullable=False, primary_key=True),
                    sa.Column('project_id', sa.Integer(), nullable=True),
                    sa.Column('input_id', sa.Integer(), nullable=True),
                    sa.Column('job_id', sa.Integer(), nullable=True),
                    sa.Column('task_id', sa.Integer(), nullable=True),
                    sa.Column('member_id', sa.Integer(), nullable=True),
                    sa.Column('file_id', sa.Integer(), nullable=True),
                    sa.Column('working_dir_id', sa.Integer(), nullable=True),
                    sa.Column('notification_id', sa.Integer(), nullable=True),
                    sa.Column('time_created', sa.DateTime(), default=datetime.datetime.utcnow, nullable=True),
                    sa.Column('time_updated', sa.DateTime(), default=datetime.datetime.utcnow, nullable=True)
                    )

    op.create_foreign_key("project_id_fkey", "notification_relation", "project", ["project_id"], ["id"])

    op.create_foreign_key("input_id_fkey", "notification_relation", "input", ["input_id"], ["id"])
    op.create_foreign_key("job_id_fkey", "notification_relation", "job", ["job_id"], ["id"])
    op.create_foreign_key("task_id_fkey", "notification_relation", "task", ["task_id"], ["id"])
    op.create_foreign_key("member_id_fkey", "notification_relation", "member", ["member_id"], ["id"])
    op.create_foreign_key("file_id_fkey", "notification_relation", "file", ["file_id"], ["id"])
    op.create_foreign_key("working_dir_id_fkey", "notification_relation", "working_dir", ["working_dir_id"], ["id"])

    op.create_table('notification',
                    sa.Column('id', sa.BIGINT, nullable=False, primary_key=True),
                    sa.Column('status', sa.String(), nullable=True),
                    sa.Column('type', sa.String(), nullable=True),
                    sa.Column('channel_type', sa.String(), nullable=True),
                    sa.Column('title', sa.String(), nullable=True),
                    sa.Column('description', sa.String(), nullable=True),
                    sa.Column('member_created_id', sa.Integer(), nullable=True),
                    sa.Column('member_updated_id', sa.Integer(), nullable=True),
                    sa.Column('notification_relation_id', sa.Integer(), nullable=True),
                    sa.Column('time_created', sa.DateTime(), default=datetime.datetime.utcnow, nullable=True),
                    sa.Column('time_updated', sa.DateTime(), default=datetime.datetime.utcnow, nullable=True)
                    )

    op.create_foreign_key("member_created_id_fkey", "notification", "member", ["member_created_id"], ["id"])
    op.create_foreign_key("member_updated_id_fkey", "notification", "member", ["member_updated_id"], ["id"])
    op.create_foreign_key("notification_relation_id_fkey", "notification", "notification_relation",
                          ["notification_relation_id"], ["id"])

    op.create_table('notification_user',
                    sa.Column('notification_id', sa.Integer(), nullable=False, primary_key=True),
                    sa.Column('user_id', sa.Integer(), nullable=False, primary_key=True),
                    sa.Column('is_read', sa.Boolean(), default=False),
                    sa.Column('time_created', sa.DateTime(), default=None, nullable=True),
                    )
    op.create_foreign_key("notification_id_fkey", "notification_relation", "notification", ["notification_id"], ["id"])
    op.create_foreign_key("notification_id_fkey", "notification_user", "notification", ["notification_id"], ["id"])
    op.create_foreign_key("user_id_fkey", "notification_user", "userbase", ["user_id"], ["id"])

    op.add_column('file', sa.Column('has_instances', sa.Boolean(), default=False))
    op.add_column('report_template', sa.Column('member_list', sa.ARRAY(sa.Integer), nullable=True, default=None))

    op.add_column('file', sa.Column('count_instances', sa.Integer(), default=None))

    op.add_column('instance', sa.Column('parent_file_id', sa.Integer(), default=None, nullable=True))
    op.create_foreign_key("parent_file_id_fkey", "instance", "file", ["parent_file_id"], ["id"])

    op.create_table('discussion',
                    sa.Column('id', sa.BIGINT, nullable=False, primary_key=True),
                    sa.Column('created_time', sa.DateTime(), default=datetime.datetime.utcnow),
                    sa.Column('title', sa.String()),
                    sa.Column('description', sa.String(), nullable=True),
                    sa.Column('member_created_id', sa.Integer()),
                    sa.Column('project_id', sa.Integer()),
                    sa.Column('status', sa.String()),
                    sa.Column('type', sa.String()),
                    sa.Column('marker_frame_number', sa.Integer(), nullable=True),
                    sa.Column('marker_type', sa.String(), default='point'),
                    sa.Column('marker_data', sa.String(), nullable=True),

                    )
    op.create_foreign_key("member_created_id_fkey", "discussion", "member", ["member_created_id"], ["id"])
    op.create_foreign_key("project_id_fkey", "discussion", "project", ["project_id"], ["id"])

    op.create_table('discussion_member',
                    sa.Column('id', sa.BIGINT, nullable=False, primary_key=True),
                    sa.Column('user_id', sa.Integer()),
                    sa.Column('member_id', sa.Integer()),
                    sa.Column('discussion_id', sa.Integer()),

                    )
    op.create_foreign_key("user_id_fkey", "discussion_member", "userbase", ["user_id"], ["id"])
    op.create_foreign_key("member_id_fkey", "discussion_member", "member", ["member_id"], ["id"])
    op.create_foreign_key("discussion_id_fkey", "discussion_member", "discussion", ["discussion_id"], ["id"])

    op.create_table('discussion_relation',
                    sa.Column('id', sa.BIGINT, nullable=False, primary_key=True),
                    sa.Column('created_time', sa.DateTime(), default=datetime.datetime.utcnow),
                    sa.Column('discussion_id', sa.Integer()),
                    sa.Column('instance_id', sa.Integer()),
                    sa.Column('file_id', sa.Integer()),
                    sa.Column('job_id', sa.Integer()),
                    sa.Column('type', sa.String()),
                    sa.Column('project_id', sa.Integer()),
                    sa.Column('task_id', sa.Integer()),

                    )
    op.create_foreign_key("discussion_id_fkey", "discussion_relation", "discussion", ["discussion_id"], ["id"])
    op.create_foreign_key("instance_id_fkey", "discussion_relation", "instance", ["instance_id"], ["id"])
    op.create_foreign_key("file_id_fkey", "discussion_relation", "file", ["file_id"], ["id"])
    op.create_foreign_key("job_id_fkey", "discussion_relation", "job", ["job_id"], ["id"])
    op.create_foreign_key("project_id_fkey", "discussion_relation", "project", ["project_id"], ["id"])
    op.create_foreign_key("task_id_fkey", "discussion_relation", "task", ["task_id"], ["id"])

    op.create_table('discussion_comment',
                    sa.Column('id', sa.BIGINT, nullable=False, primary_key=True),
                    sa.Column('user_id', sa.Integer()),
                    sa.Column('discussion_id', sa.Integer()),
                    sa.Column('project_id', sa.Integer()),
                    sa.Column('content', sa.String()),
                    sa.Column('member_created_id', sa.Integer()),
                    sa.Column('member_updated_id', sa.Integer()),
                    sa.Column('time_created', sa.DateTime(), default=datetime.datetime.utcnow),
                    sa.Column('time_updated', sa.DateTime(), default=datetime.datetime.utcnow),

                    )

    op.create_foreign_key("user_id_fkey", "discussion_comment", "userbase", ["user_id"], ["id"])
    op.create_foreign_key("discussion_id_fkey", "discussion_comment", "discussion", ["discussion_id"], ["id"])
    op.create_foreign_key("project_id_fkey", "discussion_comment", "project", ["project_id"], ["id"])
    op.create_foreign_key("member_created_id_fkey", "discussion_comment", "member", ["member_created_id"], ["id"])
    op.create_foreign_key("member_updated_id_fkey", "discussion_comment", "member", ["member_updated_id"], ["id"])

    op.add_column('instance', sa.Column('creation_ref_id', sa.String()))
    op.add_column('instance', sa.Column('previous_id', sa.BIGINT()))
    op.add_column('instance', sa.Column('next_id', sa.BIGINT()))
    op.add_column('instance', sa.Column('root_id', sa.BIGINT()))
    op.add_column('instance', sa.Column('version', sa.Integer()))

    op.add_column('attribute_template_group', sa.Column('default_value', sa.String()))
    op.add_column('attribute_template_group', sa.Column('default_id', sa.Integer))

    op.add_column('input', sa.Column('newly_copied_file_id', sa.Integer))
    op.create_foreign_key("newly_copied_file_id_fkey", "input", "file", ["newly_copied_file_id"], ["id"])

    op.add_column('input', sa.Column('source_directory_id', sa.Integer))
    op.create_foreign_key("source_directory_id_fkey", "input", "working_dir", ["source_directory_id"], ["id"])

    op.add_column('input', sa.Column('add_link', sa.Boolean))
    op.add_column('input', sa.Column('remove_link', sa.Boolean))
    op.add_column('input', sa.Column('copy_instance_list', sa.Boolean, default=False))
    op.add_column('input', sa.Column('sequence_map', sa.String))

    op.create_table('input_batch',
                    sa.Column('id', sa.BIGINT, nullable=False, primary_key=True),
                    sa.Column('status', sa.String(), default='pending'),
                    sa.Column('percent_complete', sa.Float()),
                    sa.Column('source_directory_id', sa.Integer()),
                    sa.Column('directory_id', sa.Integer()),
                    sa.Column('project_id', sa.Integer, nullable=False),
                    sa.Column('member_created_id', sa.Integer()),
                    sa.Column('member_updated_id', sa.Integer()),
                    sa.Column('time_completed', sa.DateTime(), default=None),
                    sa.Column('time_created', sa.DateTime(), default=datetime.datetime.utcnow),
                    sa.Column('time_updated', sa.DateTime(), default=datetime.datetime.utcnow)
                    )
    op.add_column('input', sa.Column('batch_id', sa.Integer))
    op.create_foreign_key("batch_id_fkey", "input", "input_batch", ["batch_id"], ["id"])
    op.create_foreign_key("directory_id_fkey", "input_batch", "working_dir", ["directory_id"], ["id"])
    op.create_foreign_key("source_directory_id_fkey", "input_batch", "working_dir", ["source_directory_id"], ["id"])

    op.add_column('instance', sa.Column('front_face', sa.String()))
    op.add_column('instance', sa.Column('rear_face', sa.String()))

    op.add_column('instance', sa.Column('angle', sa.Float()))
    op.add_column('instance', sa.Column('center_x', sa.Integer()))
    op.add_column('instance', sa.Column('center_y', sa.Integer()))

    op.add_column('instance', sa.Column('p1', sa.String()))
    op.add_column('instance', sa.Column('p2', sa.String()))
    op.add_column('instance', sa.Column('cp', sa.String()))

    op.add_column('instance', sa.Column('deleted_time', sa.DateTime(), nullable=True))
    op.add_column('input', sa.Column('allow_duplicates', sa.Boolean))

    op.add_column('attribute_template_group', sa.Column('min_value', sa.Integer))
    op.add_column('attribute_template_group', sa.Column('max_value', sa.Integer))

    op.add_column('userbase', sa.Column('signup_how_many_data_labelers', sa.String()))

    op.add_column('input', sa.Column('upload_aws_id', sa.String))
    op.add_column('input', sa.Column('upload_aws_parts_list', sa.String))

    op.add_column('userbase', sa.Column('occupation_list',
                                        sa.ARRAY(sa.String)))
    op.add_column('userbase',
                  sa.Column('linkedin_profile_url', sa.String))

    op.add_column('job',
                  sa.Column('pro_network', sa.Boolean))

    op.create_table('instance_template',
                    sa.Column('id', sa.BIGINT, nullable=False, primary_key=True),
                    sa.Column('name', sa.String()),
                    sa.Column('project_id', sa.Integer()),
                    sa.Column('reference_width', sa.Integer()),
                    sa.Column('reference_height', sa.Integer()),
                    sa.Column('member_created_id', sa.Integer()),
                    sa.Column('member_updated_id', sa.Integer()),
                    sa.Column('status', sa.String(), default='active'),
                    sa.Column('created_time', sa.DateTime(), default=datetime.datetime.utcnow),
                    sa.Column('last_updated_time', sa.DateTime(), default=datetime.datetime.utcnow),
                    sa.Column('deleted_time', sa.DateTime(), nullable=True),

                    )
    op.create_foreign_key("project_id_fkey", "instance_template", "project", ["project_id"], ["id"])
    op.create_foreign_key("member_created_id_fkey", "instance_template", "member", ["member_created_id"], ["id"])
    op.create_foreign_key("member_updated_id_fkey", "instance_template", "member", ["member_updated_id"], ["id"])

    op.create_table('instance_template_relation',
                    sa.Column('id', sa.BIGINT, nullable=False, primary_key=True),
                    sa.Column('instance_id', sa.Integer()),
                    sa.Column('instance_template_id', sa.Integer()),
                    sa.Column('created_time', sa.DateTime(), default=datetime.datetime.utcnow),
                    sa.Column('last_updated_time', sa.DateTime(), default=datetime.datetime.utcnow),
                    sa.Column('deleted_time', sa.DateTime(), nullable=True))

    op.create_foreign_key("instance_id_fkey", "instance_template_relation", "instance", ["instance_id"], ["id"])
    op.create_foreign_key("instance_template_id_fkey", "instance_template_relation", "instance_template",
                          ["instance_template_id"], ["id"])

    op.add_column('instance', sa.Column('nodes', shared.database.core.JSONEncodedDict()))
    op.add_column('instance', sa.Column('edges', shared.database.core.JSONEncodedDict()))
    op.add_column('instance', sa.Column('is_template', sa.Boolean(), default=False))

    op.add_column('event', sa.Column('object_type', sa.String()))
    op.add_column('event', sa.Column('page_name', sa.String()))

    op.add_column('instance', sa.Column('client_created_time', sa.DateTime, nullable=True))

    op.add_column('job', sa.Column('is_pinned', sa.Boolean()))

    op.add_column('input', sa.Column('upload_azure_block_list', sa.String))

    op.add_column('instance', sa.Column('change_source', sa.String, nullable=True))

    op.add_column('instance', sa.Column('deletion_type', sa.String, nullable=True))
    op.create_index('index__instance_root_id', 'instance', ['root_id'])

    op.add_column('instance', sa.Column('action_type', sa.String, nullable=True))

    # Add JobLaunchQueue
    op.create_table('sync_actions_queue',
                    sa.Column('id', sa.BIGINT, nullable=False, primary_key=True),
                    sa.Column('sync_event_id', sa.Integer(), nullable=True),
                    )
    op.create_foreign_key("sync_event_id_fkey", "sync_actions_queue", "sync_event", ["sync_event_id"], ["id"])

    op.create_table('userscript',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('archived', sa.Boolean(), nullable=True),
                    sa.Column('is_visible', sa.Boolean(), nullable=True),
                    sa.Column('is_public', sa.Boolean(), nullable=True),
                    sa.Column('name', sa.String(), nullable=True),
                    sa.Column('code', sa.String(), nullable=True),
                    sa.Column('language', sa.String(), nullable=True),
                    sa.Column('external_src_list', sa.ARRAY(sa.String()), nullable=True),
                    sa.Column('use_instructions', sa.String(), nullable=True),
                    sa.Column('docs_link', sa.String(), nullable=True),
                    sa.Column('star_rating_cache', sa.Float(), nullable=True),
                    sa.Column('previous_id', sa.BIGINT(), nullable=True),
                    sa.Column('next_id', sa.BIGINT(), nullable=True),
                    sa.Column('root_id', sa.BIGINT(), nullable=True),
                    sa.Column('version', sa.Integer(), nullable=True),
                    sa.Column('project_id', sa.Integer(), nullable=True),
                    sa.Column('client_created_time', sa.DateTime(), nullable=True),
                    sa.Column('client_creation_ref_id', sa.String(), nullable=True),
                    sa.Column('member_created_id', sa.Integer(), nullable=True),
                    sa.Column('member_updated_id', sa.Integer(), nullable=True),
                    sa.Column('time_created', sa.DateTime(), nullable=True),
                    sa.Column('time_updated', sa.DateTime(), nullable=True),
                    sa.ForeignKeyConstraint(['member_created_id'], ['member.id'], ),
                    sa.ForeignKeyConstraint(['member_updated_id'], ['member.id'], ),
                    sa.ForeignKeyConstraint(['project_id'], ['project.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.add_column('job', sa.Column('default_userscript_id', sa.Integer))


def downgrade():
    print("Initial database spin up cannot be downgraded.")
    print("Please manually delete database if required. [Advanced use]")
    return
