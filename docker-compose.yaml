version: "3.9"
services:
  dispatcher:
    image: diffgram/local_dispatcher:${DIFFGRAM_VERSION_TAG}
    ports:
    - "0.0.0.0:8085:8085"
    expose: [8085]
    depends_on:
    - frontend
    - default
    - walrus
    environment:
      SAME_HOST: ${SAME_HOST}
  frontend:
    image: diffgram/frontend:${DIFFGRAM_VERSION_TAG}
    ports:
    - "0.0.0.0:8081:80"
    expose: [80]
    depends_on:
    - default
  eventhandlers:
    image: diffgram/eventhandlers:${DIFFGRAM_VERSION_TAG}
    ports:
    - "0.0.0.0:8086:8086"
    expose: [8086]
    depends_on:
      db:
        condition: service_healthy
      default:
        condition: service_started
      rabbitmq:
        condition: service_healthy
    volumes:
    - ${GCP_SERVICE_ACCOUNT_FILE_PATH}:/gcp/gcp-service-account.json
    env_file:
      - .env
    environment:
      PYTHONPATH: "/app/"
      DIFFGRAM_SERVICE_NAME: eventhandlers
    entrypoint: ["python3", "-u", "/app/main.py"]
  walrus:
    image: diffgram/walrus:${DIFFGRAM_VERSION_TAG}
    ports:
    - "0.0.0.0:8082:8082"
    expose: [8082]
    depends_on:
      db:
        condition: service_healthy
      default:
        condition: service_started
      rabbitmq:
        condition: service_healthy
    volumes:
    - ${GCP_SERVICE_ACCOUNT_FILE_PATH}:/gcp/gcp-service-account.json
    env_file:
      - .env
    environment:
      PYTHONPATH: "/app/"
      DIFFGRAM_SERVICE_NAME: walrus
    entrypoint: ["python3", "-u", "/app/main.py"]

  default:
    image: diffgram/default:${DIFFGRAM_VERSION_TAG}
    healthcheck:
      test: curl --fail http://default:8080/api/status || exit 1
      interval: 30s
      timeout: 30s
      retries: 5
      start_period: 80s
    ports:
    - "0.0.0.0:8080:8080"
    expose: [8080]
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      db_migration:
        condition: service_completed_successfully
    volumes:
    - ${GCP_SERVICE_ACCOUNT_FILE_PATH}:/gcp/gcp-service-account.json
    env_file:
      - .env
    environment:
      PYTHONPATH: "/app/"
      DIFFGRAM_SERVICE_NAME: default
    command: ["python3", "-u", "/app/main.py"]
  db_migration:
    image: diffgram/default:${DIFFGRAM_VERSION_TAG}
    env_file:
      - .env
    environment:
      PYTHONPATH: "/app/"
    command: ["/app/db-init.sh", "${DATABASE_HOST}"]
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
  db:
    image: ${POSTGRES_IMAGE}
    hostname: db
    restart: always
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready", "-d", "db_prod" ]
      interval: 30s
      timeout: 60s
      retries: 5
      start_period: 80s
    environment:
    - POSTGRES_HOST_AUTH_METHOD=trust
    - POSTGRES_DB=diffgram
    volumes:
    # Default INTERNAL_POSTGRES_DIR=/var/lib/postgresql/data:Z
    - ${POSTGRES_DATA_DIR:-./postgres-data}:${INTERNAL_POSTGRES_DIR:-/var/lib/postgresql/data}
    ports:
    - 5432:5432
  rabbitmq:
    image: rabbitmq:3.10-rc-management-alpine
    env_file:
      - .env
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3
    container_name: 'rabbitmq'
    expose: [5672, 15672]
    ports:
        - 5672:5672
        - 15672:15672
  minio:
    image: minio/minio
    ports:
      - "9000:9000"
      - "9001:9001"
    expose: [9000, 9001]
    volumes:
      - ./test/.minio/data:/export
      - ./test/.minio/config:/root/.minio
    environment:
      - "MINIO_ROOT_USER=${DIFFGRAM_MINIO_ACCESS_KEY_ID}"
      - "MINIO_ROOT_PASSWORD=${DIFFGRAM_MINIO_ACCESS_KEY_SECRET}"
    command: server /export --console-address :9001

  createbuckets:
    image: minio/mc
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc config host add myminio http://minio:9000 ${DIFFGRAM_MINIO_ACCESS_KEY_ID} ${DIFFGRAM_MINIO_ACCESS_KEY_SECRET};
      /usr/bin/mc mb myminio/${DIFFGRAM_S3_BUCKET_NAME};
      /usr/bin/mc policy set policy myminio/${DIFFGRAM_S3_BUCKET_NAME} ;
      exit 0;
      "
volumes:
  static: {}