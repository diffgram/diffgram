{
    "info": {
        "title": "Diffgram Default API",
        "version": "1.0"
    },
    "paths": {
        "/api/v1/file/view": {
            "post": {
                "summary": "View File",
                "description": "Gets the details of a given file ID",
                "responses": {
                    "200": {
                        "description": "The updated file.",
                        "schema": {
                            "$ref": "#/definitions/File"
                        }
                    }
                },
                "parameters": [
                    {
                        "in": "body",
                        "required": true,
                        "name": "FileUpdateMetadataReqBody",
                        "description": "The metadata to be updated. Any keys not provided will be ignored.",
                        "schema": {
                            "$ref": "#/definitions/FileUpdateMetadataReqBody"
                        }
                    }
                ],
                "tags": [
                    "Files"
                ]
            }
        },
        "/api/v1/project/{project_string_id}/actions/workflow/{workflow_id}/action": {
            "post": {
                "summary": "Create Actions",
                "description": "Create a new action within a workflow.",
                "responses": {
                    "200": {
                        "description": "The updated file.",
                        "schema": {
                            "$ref": "#/definitions/File"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "project_string_id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "workflow_id",
                        "in": "path",
                        "type": "number",
                        "required": true
                    },
                    {
                        "in": "body",
                        "name": "ActionsNewRequestBody",
                        "description": "The metadata to be updated. Any keys not provided will be ignored.",
                        "schema": {
                            "$ref": "#/definitions/ActionsNewRequestBody"
                        }
                    }
                ],
                "tags": [
                    "Workflows & Actions"
                ]
            }
        },
        "/api/v1/project/{project_string_id}/discussion/{discussion_id}/add-comment": {
            "post": {
                "summary": "Create Discussion Comment",
                "description": "Creates a comment on the given discussion ID.",
                "responses": {
                    "200": {
                        "description": "The newly created comment",
                        "schema": {
                            "$ref": "#/definitions/DiscussionComment"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "project_string_id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "discussion_id",
                        "in": "path",
                        "type": "number",
                        "required": true
                    },
                    {
                        "in": "body",
                        "name": "DiscussionCommentReqBody",
                        "description": "The comment body content",
                        "schema": {
                            "$ref": "#/definitions/DiscussionCommentReqBody"
                        }
                    }
                ],
                "tags": [
                    "Discussions"
                ]
            }
        },
        "/api/v1/project/{project_string_id}/file/{file_id}/update-metadata": {
            "put": {
                "summary": "Update File Metadata",
                "description": "Updates the given file ID file metadata.",
                "responses": {
                    "200": {
                        "description": "The updated file.",
                        "schema": {
                            "$ref": "#/definitions/File"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "project_string_id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "file_id",
                        "in": "path",
                        "type": "number",
                        "required": true
                    },
                    {
                        "in": "body",
                        "name": "FileUpdateMetadataReqBody",
                        "description": "The metadata to be updated. Any keys not provided will be ignored.",
                        "schema": {
                            "$ref": "#/definitions/FileUpdateMetadataReqBody"
                        }
                    }
                ],
                "tags": [
                    "Files"
                ]
            }
        }
    },
    "definitions": {
        "File": {
            "type": "object",
            "properties": {
                "image": {
                    "description": "the image related data.",
                    "type": "object"
                },
                "video": {
                    "description": "the video related data.",
                    "type": "object"
                },
                "id": {
                    "description": "the file ID",
                    "type": "object"
                },
                "hash": {
                    "description": "the file hash.",
                    "type": "string"
                },
                "state": {
                    "description": "the state of the file.",
                    "type": "string"
                },
                "created_time": {
                    "description": "The time the file was created.",
                    "type": "string"
                },
                "time_last_updated": {
                    "description": "The time the file was updated.",
                    "type": "object"
                },
                "original_filename": {
                    "description": "The name of the file.",
                    "type": "string"
                },
                "bucket_name": {
                    "description": "Bucket name where file resides (if applicable)",
                    "type": "string"
                },
                "connection_id": {
                    "description": "Connection ID to access the file (if applicable)",
                    "type": "number"
                },
                "video_id": {
                    "description": "Video ID to for accessing the video object.",
                    "type": "number"
                },
                "video_parent_file_id": {
                    "description": "File ID of the parent video file.",
                    "type": "number"
                }
            }
        },
        "FileUpdateMetadataReqBody": {
            "type": "object",
            "properties": {
                "rotation_degrees": {
                    "description": "the rotation degrees for rotating image. Works only on image type files.",
                    "type": "number"
                },
                "ordinal": {
                    "description": "the ordinal for a child file. Useful for ordering compound files.",
                    "type": "number"
                }
            }
        },
        "ActionsNewRequestBody": {
            "type": "object",
            "properties": {
                "kind": {
                    "description": "the type of the action.",
                    "type": "number"
                },
                "active": {
                    "description": "is the action active or not.",
                    "type": "boolean"
                },
                "archived": {
                    "description": "is the action archived or not.",
                    "type": "boolean"
                },
                "status": {
                    "description": "action status",
                    "type": "string"
                },
                "template_id": {
                    "description": "action template ID.",
                    "type": "number"
                },
                "workflow_id": {
                    "description": "Workflow ID to which this actions belongs to.",
                    "type": "number"
                },
                "public_name": {
                    "description": "UI Visible action name.",
                    "type": "string"
                },
                "icon": {
                    "description": "Icon URL for the action",
                    "type": "string"
                },
                "description": {
                    "description": "Short description for what the action does.",
                    "type": "string"
                },
                "trigger_data": {
                    "description": "Payload of the trigger of this action",
                    "$ref": "#/definitions/TriggerData"
                },
                "ordinal": {
                    "description": "Order of the actions inside the workflow.",
                    "type": "number"
                },
                "precondition": {
                    "description": "Object with the metadata for the precondition",
                    "$ref": "#/definitions/PreConditionData"
                },
                "completion_condition_data": {
                    "description": "Object with the metadata for the completion condition data.",
                    "$ref": "#/definitions/CompletionConditionData"
                }
            }
        },
        "TriggerData": {
            "type": "object",
            "properties": {
                "event_name": {
                    "description": "The name of the event to listen for triggering.",
                    "type": "string"
                },
                "upload_directory_id_list": {
                    "description": "In case for directories events, the list of dir IDs to listen for.",
                    "type": "number"
                },
                "trigger_action_id": {
                    "description": "The ID of the action this trigger belongs to.",
                    "type": "number"
                }
            }
        },
        "PreConditionData": {
            "type": "object",
            "properties": {
                "event_name": {
                    "description": "The name of the event to allow triggering the action, all other events will not trigger it.",
                    "type": "string"
                }
            }
        },
        "CompletionConditionData": {
            "type": "object",
            "properties": {
                "event_name": {
                    "description": "The name of the event to allow triggering the action, all other events will not trigger it.",
                    "type": "string"
                }
            }
        },
        "DiscussionComment": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "number"
                }
            }
        },
        "DiscussionCommentReqBody": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                }
            }
        }
    },
    "swagger": "2.0",
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ]
}