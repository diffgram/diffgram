name: Diffgram Testing Workflow
on:
  push:
    branches:
      - 'main'
      - 'releases/**'
      - '**'
  pull_request_target:
    types: [review_requested]
    branches:
      - 'releases/**'
      - '!DAD**'
jobs:
  Default-Service-Unit-Tests:
    runs-on: ubuntu-latest
    # Service containers to run with `container-job`

    container:
      image: python:3.7
      options: --user root
      env:
        NODE_ENV: development
        DATABASE_URL: postgresql+psycopg2://postgres:postgres@postgres/diffgram_unit_tests?sslmode=disable
        PYTHONPATH: /__w/diffgram/default
        DIFFGRAM_SYSTEM_MODE: testing
        GOOGLE_APPLICATION_CREDENTIALS: /gcp/gcloud-service-key.json
        DIFFGRAM_STATIC_STORAGE_PROVIDER: gcp
        GOOGLE_PROJECT_NAME: ${{ secrets.GOOGLE_PROJECT_NAME }}
        DIFFGRAM_HOST_OS: ${{ secrets.DIFFGRAM_HOST_OS }}
        DIFFGRAM_VERSION_TAG: ${{ secrets.DIFFGRAM_VERSION_TAG }}
        DIFFGRAM_INSTALL_FINGERPRINT: ${{ secrets.DIFFGRAM_INSTALL_FINGERPRINT }}
        CLOUD_STORAGE_BUCKET: ${{ secrets.CLOUD_STORAGE_BUCKET }}
        ML__CLOUD_STORAGE_BUCKET: ${{ secrets.ML__CLOUD_STORAGE_BUCKET }}
        SERVICE_ACCOUNT_FULL_PATH: /gcp/gcloud-service-key.json
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v2
      - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
      - run: cp -rf . /__w/diffgram
      - run: cd /__w/diffgram
      - run: pip install -r default/requirements.txt
      - run: pip install pytest sqlalchemy-utils
      - run: mkdir /gcp
      - run: echo ${{ secrets.GOOGLE_SERVICE_ACCOUNT_ENCODED }} | base64 --decode --ignore-garbage > /gcp/gcloud-service-key.json
      - run: pytest default/tests --junitxml=test-results/junit.xml
      - name: Publish Default Service Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: always()
        with:
          files: test-results/**/*.xml
  Walrus-Service-Unit-Tests:
    runs-on: ubuntu-latest
    # Service containers to run with `container-job`
    container:
      image: python:3.7
      options: --user root
      env:
        NODE_ENV: development
        DATABASE_URL: postgresql+psycopg2://postgres:postgres@postgres/diffgram_unit_tests?sslmode=disable
        PYTHONPATH: /__w/diffgram/walrus
        DIFFGRAM_SYSTEM_MODE: testing
        GOOGLE_APPLICATION_CREDENTIALS: /gcp/gcloud-service-key.json
        DIFFGRAM_STATIC_STORAGE_PROVIDER: gcp
        GOOGLE_PROJECT_NAME: ${{ secrets.GOOGLE_PROJECT_NAME }}
        CLOUD_STORAGE_BUCKET: ${{ secrets.CLOUD_STORAGE_BUCKET }}
        ML__CLOUD_STORAGE_BUCKET: ${{ secrets.ML__CLOUD_STORAGE_BUCKET }}
        DIFFGRAM_HOST_OS: ${{ secrets.DIFFGRAM_HOST_OS }}
        DIFFGRAM_VERSION_TAG: ${{ secrets.DIFFGRAM_VERSION_TAG }}
        DIFFGRAM_INSTALL_FINGERPRINT: ${{ secrets.DIFFGRAM_INSTALL_FINGERPRINT }}
        SERVICE_ACCOUNT_FULL_PATH: /gcp/gcloud-service-key.json
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v2
      - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
      - run: pwd
      - run: cp -rf . /__w/diffgram
      - run: cd /__w/diffgram
      - run: cd walrus
      - run: pip install -r walrus/requirements.txt
      - run: pip install pytest sqlalchemy-utils
      - run: mkdir /gcp
      - run: echo ${{ secrets.GOOGLE_SERVICE_ACCOUNT_ENCODED }} | base64 --decode --ignore-garbage > /gcp/gcloud-service-key.json
      - run: pytest walrus/tests --junitxml=test-results/junit.xml
      - name: Publish Walrus Service Results
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: always()
        with:
          files: test-results/**/*.xml

  E2E-Tests:
    runs-on: self-hosted
    # Service containers to run with `container-job`
    strategy:
      fail-fast: false
      matrix:
        # run copies of the current job in parallel
        containers: [1]
    container:
      image: gcr.io/diffgram-open-core/cypress-e2e
      options: --user root
      env:
        NODE_ENV: development
        DATABASE_URL: postgresql+psycopg2://postgres:postgres@postgres/diffgram_unit_tests?sslmode=disable
        PYTHONPATH: /__w/diffgram
        DIFFGRAM_SYSTEM_MODE: testing_e2e
        GOOGLE_APPLICATION_CREDENTIALS: /gcp/gcloud-service-key.json
        DIFFGRAM_STATIC_STORAGE_PROVIDER: azure
        SAME_HOST: True
        DIFFGRAM_AZURE_CONNECTION_STRING: ${{ secrets.E2E_TESTS_AZURE_CONNECTION_STRING }}
        DIFFGRAM_AZURE_CONTAINER_NAME: testsgithubactions
        ML__DIFFGRAM_AZURE_CONTAINER_NAME: testsgithubactions
        CYPRESS_PROJECT_ID: ${{ secrets.CYPRESS_PROJECT_ID }}
        CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
        SERVICE_ACCOUNT_FULL_PATH: /gcp/gcloud-service-key.json
        DIFFGRAM_HOST_OS: ${{ secrets.DIFFGRAM_HOST_OS }}
        DIFFGRAM_VERSION_TAG: ${{ secrets.DIFFGRAM_VERSION_TAG }}
        DIFFGRAM_INSTALL_FINGERPRINT: ${{ secrets.DIFFGRAM_INSTALL_FINGERPRINT }}
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v2
      - run: cp -rf . /__w/diffgram
      - run: cd /__w/diffgram
      - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
      - run: cd walrus
      - run: pip3 install -r walrus/requirements.txt
      - run: pip3 install -r default/requirements.txt
      - run: pip3 install pytest sqlalchemy-utils
      - run: mkdir /gcp
      - run: echo ${{ secrets.GOOGLE_SERVICE_ACCOUNT_ENCODED }} | base64 --decode --ignore-garbage > /gcp/gcloud-service-key.json
      # Frontend Dependencies
      - run: yarn --cwd frontend/ install
      #    - run: yarn --cwd frontend/ run cypress install
      - run: yarn --cwd frontend/ build
      # Populate DB
      - run: cd default/play_and_scripts/scripts; python setup_database_e2e_tests.py
      # Start Servers
      #    - run: yarn --cwd frontend/ run dev & npx wait-on http://localhost:8081
      # Test connections
      #    - run: sleep 10
      #      - run: curl -4 --max-time 180 --retry 20 --retry-delay 10 --retry-max-time 10 --retry-connrefused http://0.0.0.0:8080
      #    - run: curl -4 --max-time 180 --retry 20 --retry-delay 10 --retry-max-time 10 --retry-connrefused http://0.0.0.0:8081
      #      - run: curl -4 --max-time 180 --retry 20 --retry-delay 10 --retry-max-time 10 --retry-connrefused http://0.0.0.0:8082
      #      - run: curl -4 --max-time 180 --retry 20 --retry-delay 10 --retry-max-time 10 --retry-connrefused http://0.0.0.0:8085
      # Run tests.
      #      - run:  python3 default/main.py & python3 walrus/main.py & python3 local_dispatcher/local_dispatch.py & yarn --cwd frontend/ run cypress run --record --headed --browser chrome

      - name: "UI Tests - Chrome"
        uses: cypress-io/github-action@v2
        with:
          # we have already installed all dependencies above
          install: true
          start: |
            yarn --cwd run dev
            python3 ../default/main.py
            python3 ../walrus/main.py
            python3 ../local_dispatcher/local_dispatch.py
          wait-on: "http://localhost:8081, http://localhost:8082, http://localhost:8085"
          wait-on-timeout: 40
          browser: chrome
          record: true
          parallel: true
          group: "UI - Chrome"
          working-directory: frontend
        env:
          # Recommended: pass the GitHub token lets this action correctly
          # determine the unique run id necessary to re-run the checks
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_ENV: development
          DATABASE_URL: postgresql+psycopg2://postgres:postgres@postgres/diffgram_unit_tests?sslmode=disable
          PYTHONPATH: /__w/diffgram
          DIFFGRAM_SYSTEM_MODE: testing_e2e
          GOOGLE_APPLICATION_CREDENTIALS: /gcp/gcloud-service-key.json
          DIFFGRAM_STATIC_STORAGE_PROVIDER: azure
          SAME_HOST: True
          DIFFGRAM_AZURE_CONNECTION_STRING: ${{ secrets.E2E_TESTS_AZURE_CONNECTION_STRING }}
          DIFFGRAM_AZURE_CONTAINER_NAME: testsgithubactions
          ML__DIFFGRAM_AZURE_CONTAINER_NAME: testsgithubactions
          CYPRESS_PROJECT_ID: ${{ secrets.CYPRESS_PROJECT_ID }}
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          SERVICE_ACCOUNT_FULL_PATH: /gcp/gcloud-service-key.json
          DIFFGRAM_HOST_OS: ${{ secrets.DIFFGRAM_HOST_OS }}
          DIFFGRAM_VERSION_TAG: ${{ secrets.DIFFGRAM_VERSION_TAG }}
          DIFFGRAM_INSTALL_FINGERPRINT: ${{ secrets.DIFFGRAM_INSTALL_FINGERPRINT }}

  Frontend-Unit-Tests:
    runs-on: ubuntu-latest
    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v2
      - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
      - run: cd frontend
      - uses: actions/setup-node@v2
        with:
          node-version: "14"
      - run: yarn --cwd frontend install
      - run: yarn --cwd frontend run test:unit
